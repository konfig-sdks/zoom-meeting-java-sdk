/*
 * Zoom Meeting API
 * The Zoom Meeting APIs let developers to access information from Zoom. 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ArchivingGetStatisticsResponse;
import com.konfigthis.client.model.ArchivingMeetingFilesList200Response;
import com.konfigthis.client.model.ArchivingMeetingFilesListResponse;
import com.konfigthis.client.model.ArchivingUpdateAutoDeleteStatusRequest;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ArchivingApi
 */
@Disabled
public class ArchivingApiTest {

    private static ArchivingApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ArchivingApi(apiClient);
    }

    /**
     * Get archived file statistics
     *
     * Get statistics about an account&#39;s archived meeting or webinar files.    Zoom&#39;s [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA and other compliance requirements.    **Prerequisites:**  * The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).  **Scopes:** &#x60;recording:read:admin&#x60;  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** &#x60;Medium&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStatisticsTest() throws ApiException {
        OffsetDateTime from = null;
        OffsetDateTime to = null;
        ArchivingGetStatisticsResponse response = api.getStatistics()
                .from(from)
                .to(to)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a meeting&#39;s archived files
     *
     * Use this API to delete all of a meeting&#39;s archived files.    **Prerequisites:**  * The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).  **Scopes:** &#x60;recording:write:admin&#x60;,&#x60;recording:write&#x60;  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** &#x60;Light&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void meetingFilesDeleteTest() throws ApiException {
        String meetingUUID = null;
        api.meetingFilesDelete(meetingUUID)
                .execute();
        // TODO: test validations
    }

    /**
     * List archived files
     *
     * Get an account&#39;s archived meeting or webinar files.    Zoom&#39;s [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA or other compliance requirements.    **Prerequisites:**  * The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).  **Scopes:** &#x60;recording:read:admin&#x60;  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** &#x60;MEDIUM&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void meetingFilesListTest() throws ApiException {
        Integer pageSize = null;
        String nextPageToken = null;
        OffsetDateTime from = null;
        OffsetDateTime to = null;
        String queryDateType = null;
        String groupId = null;
        ArchivingMeetingFilesListResponse response = api.meetingFilesList()
                .pageSize(pageSize)
                .nextPageToken(nextPageToken)
                .from(from)
                .to(to)
                .queryDateType(queryDateType)
                .groupId(groupId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a meeting&#39;s archived files
     *
     * Return a specific meeting instance&#39;s [archived files](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators).    **Prerequisites:**  * The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).  **Scopes:** &#x60;recording:read&#x60;  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** &#x60;LIGHT&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void meetingFilesList_0Test() throws ApiException {
        String meetingUUID = null;
        ArchivingMeetingFilesList200Response response = api.meetingFilesList_0(meetingUUID)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an archived file&#39;s auto-delete status
     *
     * Update an archived file&#39;s auto-delete status.    **Prerequisites:**  * [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003) must enable the [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) for your account. * Open the disabling auto-delete feature in OP. Contact [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003) to open.  **Scopes:** &#x60;recording:write&#x60;,&#x60;recording:write:admin&#x60;  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** &#x60;LIGHT&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAutoDeleteStatusTest() throws ApiException {
        Boolean autoDelete = null;
        String fileId = null;
        api.updateAutoDeleteStatus(autoDelete)
                .fileId(fileId)
                .execute();
        // TODO: test validations
    }

}
