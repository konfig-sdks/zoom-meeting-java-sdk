/*
 * Zoom Meeting API
 * The Zoom Meeting APIs let developers to access information from Zoom. 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.WebinarsGetDetailsResponseSettingsAttendeesAndPanelistsReminderEmailNotification;
import com.konfigthis.client.model.WebinarsGetDetailsResponseSettingsFollowUpAbsenteesEmailNotification;
import com.konfigthis.client.model.WebinarsGetDetailsResponseSettingsFollowUpAttendeesEmailNotification;
import com.konfigthis.client.model.WebinarsGetDetailsResponseSettingsLanguageInterpretation;
import com.konfigthis.client.model.WebinarsGetDetailsResponseSettingsQuestionAndAnswer;
import com.konfigthis.client.model.WebinarsGetDetailsResponseSettingsSignLanguageInterpretation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for WebinarsGetDetailsResponseSettings
 */
public class WebinarsGetDetailsResponseSettingsTest {
    private final WebinarsGetDetailsResponseSettings model = new WebinarsGetDetailsResponseSettings();

    /**
     * Model tests for WebinarsGetDetailsResponseSettings
     */
    @Test
    public void testWebinarsGetDetailsResponseSettings() {
        // TODO: test WebinarsGetDetailsResponseSettings
    }

    /**
     * Test the property 'allowMultipleDevices'
     */
    @Test
    public void allowMultipleDevicesTest() {
        // TODO: test allowMultipleDevices
    }

    /**
     * Test the property 'alternativeHosts'
     */
    @Test
    public void alternativeHostsTest() {
        // TODO: test alternativeHosts
    }

    /**
     * Test the property 'alternativeHostUpdatePolls'
     */
    @Test
    public void alternativeHostUpdatePollsTest() {
        // TODO: test alternativeHostUpdatePolls
    }

    /**
     * Test the property 'approvalType'
     */
    @Test
    public void approvalTypeTest() {
        // TODO: test approvalType
    }

    /**
     * Test the property 'attendeesAndPanelistsReminderEmailNotification'
     */
    @Test
    public void attendeesAndPanelistsReminderEmailNotificationTest() {
        // TODO: test attendeesAndPanelistsReminderEmailNotification
    }

    /**
     * Test the property 'audio'
     */
    @Test
    public void audioTest() {
        // TODO: test audio
    }

    /**
     * Test the property 'audioConferenceInfo'
     */
    @Test
    public void audioConferenceInfoTest() {
        // TODO: test audioConferenceInfo
    }

    /**
     * Test the property 'authenticationDomains'
     */
    @Test
    public void authenticationDomainsTest() {
        // TODO: test authenticationDomains
    }

    /**
     * Test the property 'authenticationName'
     */
    @Test
    public void authenticationNameTest() {
        // TODO: test authenticationName
    }

    /**
     * Test the property 'authenticationOption'
     */
    @Test
    public void authenticationOptionTest() {
        // TODO: test authenticationOption
    }

    /**
     * Test the property 'autoRecording'
     */
    @Test
    public void autoRecordingTest() {
        // TODO: test autoRecording
    }

    /**
     * Test the property 'closeRegistration'
     */
    @Test
    public void closeRegistrationTest() {
        // TODO: test closeRegistration
    }

    /**
     * Test the property 'contactEmail'
     */
    @Test
    public void contactEmailTest() {
        // TODO: test contactEmail
    }

    /**
     * Test the property 'contactName'
     */
    @Test
    public void contactNameTest() {
        // TODO: test contactName
    }

    /**
     * Test the property 'emailLanguage'
     */
    @Test
    public void emailLanguageTest() {
        // TODO: test emailLanguage
    }

    /**
     * Test the property 'enforceLogin'
     */
    @Test
    public void enforceLoginTest() {
        // TODO: test enforceLogin
    }

    /**
     * Test the property 'enforceLoginDomains'
     */
    @Test
    public void enforceLoginDomainsTest() {
        // TODO: test enforceLoginDomains
    }

    /**
     * Test the property 'followUpAbsenteesEmailNotification'
     */
    @Test
    public void followUpAbsenteesEmailNotificationTest() {
        // TODO: test followUpAbsenteesEmailNotification
    }

    /**
     * Test the property 'followUpAttendeesEmailNotification'
     */
    @Test
    public void followUpAttendeesEmailNotificationTest() {
        // TODO: test followUpAttendeesEmailNotification
    }

    /**
     * Test the property 'globalDialInCountries'
     */
    @Test
    public void globalDialInCountriesTest() {
        // TODO: test globalDialInCountries
    }

    /**
     * Test the property 'hdVideo'
     */
    @Test
    public void hdVideoTest() {
        // TODO: test hdVideo
    }

    /**
     * Test the property 'hdVideoForAttendees'
     */
    @Test
    public void hdVideoForAttendeesTest() {
        // TODO: test hdVideoForAttendees
    }

    /**
     * Test the property 'hostVideo'
     */
    @Test
    public void hostVideoTest() {
        // TODO: test hostVideo
    }

    /**
     * Test the property 'languageInterpretation'
     */
    @Test
    public void languageInterpretationTest() {
        // TODO: test languageInterpretation
    }

    /**
     * Test the property 'signLanguageInterpretation'
     */
    @Test
    public void signLanguageInterpretationTest() {
        // TODO: test signLanguageInterpretation
    }

    /**
     * Test the property 'panelistAuthentication'
     */
    @Test
    public void panelistAuthenticationTest() {
        // TODO: test panelistAuthentication
    }

    /**
     * Test the property 'meetingAuthentication'
     */
    @Test
    public void meetingAuthenticationTest() {
        // TODO: test meetingAuthentication
    }

    /**
     * Test the property 'addWatermark'
     */
    @Test
    public void addWatermarkTest() {
        // TODO: test addWatermark
    }

    /**
     * Test the property 'addAudioWatermark'
     */
    @Test
    public void addAudioWatermarkTest() {
        // TODO: test addAudioWatermark
    }

    /**
     * Test the property 'notifyRegistrants'
     */
    @Test
    public void notifyRegistrantsTest() {
        // TODO: test notifyRegistrants
    }

    /**
     * Test the property 'onDemand'
     */
    @Test
    public void onDemandTest() {
        // TODO: test onDemand
    }

    /**
     * Test the property 'panelistsInvitationEmailNotification'
     */
    @Test
    public void panelistsInvitationEmailNotificationTest() {
        // TODO: test panelistsInvitationEmailNotification
    }

    /**
     * Test the property 'panelistsVideo'
     */
    @Test
    public void panelistsVideoTest() {
        // TODO: test panelistsVideo
    }

    /**
     * Test the property 'postWebinarSurvey'
     */
    @Test
    public void postWebinarSurveyTest() {
        // TODO: test postWebinarSurvey
    }

    /**
     * Test the property 'practiceSession'
     */
    @Test
    public void practiceSessionTest() {
        // TODO: test practiceSession
    }

    /**
     * Test the property 'questionAndAnswer'
     */
    @Test
    public void questionAndAnswerTest() {
        // TODO: test questionAndAnswer
    }

    /**
     * Test the property 'registrantsConfirmationEmail'
     */
    @Test
    public void registrantsConfirmationEmailTest() {
        // TODO: test registrantsConfirmationEmail
    }

    /**
     * Test the property 'registrantsEmailNotification'
     */
    @Test
    public void registrantsEmailNotificationTest() {
        // TODO: test registrantsEmailNotification
    }

    /**
     * Test the property 'registrantsRestrictNumber'
     */
    @Test
    public void registrantsRestrictNumberTest() {
        // TODO: test registrantsRestrictNumber
    }

    /**
     * Test the property 'registrationType'
     */
    @Test
    public void registrationTypeTest() {
        // TODO: test registrationType
    }

    /**
     * Test the property 'send1080pVideoToAttendees'
     */
    @Test
    public void send1080pVideoToAttendeesTest() {
        // TODO: test send1080pVideoToAttendees
    }

    /**
     * Test the property 'showShareButton'
     */
    @Test
    public void showShareButtonTest() {
        // TODO: test showShareButton
    }

    /**
     * Test the property 'surveyUrl'
     */
    @Test
    public void surveyUrlTest() {
        // TODO: test surveyUrl
    }

    /**
     * Test the property 'enableSessionBranding'
     */
    @Test
    public void enableSessionBrandingTest() {
        // TODO: test enableSessionBranding
    }

}
