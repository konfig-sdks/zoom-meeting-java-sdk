/*
 * Zoom Meeting API
 * The Zoom Meeting APIs let developers to access information from Zoom. 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.MeetingsGetDetailsResponseSettingsApprovedOrDeniedCountriesOrRegions;
import com.konfigthis.client.model.MeetingsGetDetailsResponseSettingsAuthenticationExceptionInner;
import com.konfigthis.client.model.MeetingsGetDetailsResponseSettingsBreakoutRoom;
import com.konfigthis.client.model.MeetingsGetDetailsResponseSettingsContinuousMeetingChat;
import com.konfigthis.client.model.MeetingsGetDetailsResponseSettingsCustomKeysInner;
import com.konfigthis.client.model.MeetingsGetDetailsResponseSettingsGlobalDialInNumbersInner;
import com.konfigthis.client.model.MeetingsGetDetailsResponseSettingsLanguageInterpretation;
import com.konfigthis.client.model.MeetingsGetDetailsResponseSettingsResourcesInner;
import com.konfigthis.client.model.MeetingsGetDetailsResponseSettingsSignLanguageInterpretation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for MeetingsGetDetailsResponseSettings
 */
public class MeetingsGetDetailsResponseSettingsTest {
    private final MeetingsGetDetailsResponseSettings model = new MeetingsGetDetailsResponseSettings();

    /**
     * Model tests for MeetingsGetDetailsResponseSettings
     */
    @Test
    public void testMeetingsGetDetailsResponseSettings() {
        // TODO: test MeetingsGetDetailsResponseSettings
    }

    /**
     * Test the property 'allowMultipleDevices'
     */
    @Test
    public void allowMultipleDevicesTest() {
        // TODO: test allowMultipleDevices
    }

    /**
     * Test the property 'alternativeHosts'
     */
    @Test
    public void alternativeHostsTest() {
        // TODO: test alternativeHosts
    }

    /**
     * Test the property 'alternativeHostsEmailNotification'
     */
    @Test
    public void alternativeHostsEmailNotificationTest() {
        // TODO: test alternativeHostsEmailNotification
    }

    /**
     * Test the property 'alternativeHostUpdatePolls'
     */
    @Test
    public void alternativeHostUpdatePollsTest() {
        // TODO: test alternativeHostUpdatePolls
    }

    /**
     * Test the property 'approvalType'
     */
    @Test
    public void approvalTypeTest() {
        // TODO: test approvalType
    }

    /**
     * Test the property 'approvedOrDeniedCountriesOrRegions'
     */
    @Test
    public void approvedOrDeniedCountriesOrRegionsTest() {
        // TODO: test approvedOrDeniedCountriesOrRegions
    }

    /**
     * Test the property 'audio'
     */
    @Test
    public void audioTest() {
        // TODO: test audio
    }

    /**
     * Test the property 'audioConferenceInfo'
     */
    @Test
    public void audioConferenceInfoTest() {
        // TODO: test audioConferenceInfo
    }

    /**
     * Test the property 'authenticationDomains'
     */
    @Test
    public void authenticationDomainsTest() {
        // TODO: test authenticationDomains
    }

    /**
     * Test the property 'authenticationException'
     */
    @Test
    public void authenticationExceptionTest() {
        // TODO: test authenticationException
    }

    /**
     * Test the property 'authenticationName'
     */
    @Test
    public void authenticationNameTest() {
        // TODO: test authenticationName
    }

    /**
     * Test the property 'authenticationOption'
     */
    @Test
    public void authenticationOptionTest() {
        // TODO: test authenticationOption
    }

    /**
     * Test the property 'autoRecording'
     */
    @Test
    public void autoRecordingTest() {
        // TODO: test autoRecording
    }

    /**
     * Test the property 'breakoutRoom'
     */
    @Test
    public void breakoutRoomTest() {
        // TODO: test breakoutRoom
    }

    /**
     * Test the property 'calendarType'
     */
    @Test
    public void calendarTypeTest() {
        // TODO: test calendarType
    }

    /**
     * Test the property 'closeRegistration'
     */
    @Test
    public void closeRegistrationTest() {
        // TODO: test closeRegistration
    }

    /**
     * Test the property 'cnMeeting'
     */
    @Test
    public void cnMeetingTest() {
        // TODO: test cnMeeting
    }

    /**
     * Test the property 'contactEmail'
     */
    @Test
    public void contactEmailTest() {
        // TODO: test contactEmail
    }

    /**
     * Test the property 'contactName'
     */
    @Test
    public void contactNameTest() {
        // TODO: test contactName
    }

    /**
     * Test the property 'customKeys'
     */
    @Test
    public void customKeysTest() {
        // TODO: test customKeys
    }

    /**
     * Test the property 'emailNotification'
     */
    @Test
    public void emailNotificationTest() {
        // TODO: test emailNotification
    }

    /**
     * Test the property 'encryptionType'
     */
    @Test
    public void encryptionTypeTest() {
        // TODO: test encryptionType
    }

    /**
     * Test the property 'enforceLogin'
     */
    @Test
    public void enforceLoginTest() {
        // TODO: test enforceLogin
    }

    /**
     * Test the property 'enforceLoginDomains'
     */
    @Test
    public void enforceLoginDomainsTest() {
        // TODO: test enforceLoginDomains
    }

    /**
     * Test the property 'focusMode'
     */
    @Test
    public void focusModeTest() {
        // TODO: test focusMode
    }

    /**
     * Test the property 'globalDialInCountries'
     */
    @Test
    public void globalDialInCountriesTest() {
        // TODO: test globalDialInCountries
    }

    /**
     * Test the property 'globalDialInNumbers'
     */
    @Test
    public void globalDialInNumbersTest() {
        // TODO: test globalDialInNumbers
    }

    /**
     * Test the property 'hostVideo'
     */
    @Test
    public void hostVideoTest() {
        // TODO: test hostVideo
    }

    /**
     * Test the property 'inMeeting'
     */
    @Test
    public void inMeetingTest() {
        // TODO: test inMeeting
    }

    /**
     * Test the property 'jbhTime'
     */
    @Test
    public void jbhTimeTest() {
        // TODO: test jbhTime
    }

    /**
     * Test the property 'joinBeforeHost'
     */
    @Test
    public void joinBeforeHostTest() {
        // TODO: test joinBeforeHost
    }

    /**
     * Test the property 'languageInterpretation'
     */
    @Test
    public void languageInterpretationTest() {
        // TODO: test languageInterpretation
    }

    /**
     * Test the property 'signLanguageInterpretation'
     */
    @Test
    public void signLanguageInterpretationTest() {
        // TODO: test signLanguageInterpretation
    }

    /**
     * Test the property 'meetingAuthentication'
     */
    @Test
    public void meetingAuthenticationTest() {
        // TODO: test meetingAuthentication
    }

    /**
     * Test the property 'muteUponEntry'
     */
    @Test
    public void muteUponEntryTest() {
        // TODO: test muteUponEntry
    }

    /**
     * Test the property 'participantVideo'
     */
    @Test
    public void participantVideoTest() {
        // TODO: test participantVideo
    }

    /**
     * Test the property 'privateMeeting'
     */
    @Test
    public void privateMeetingTest() {
        // TODO: test privateMeeting
    }

    /**
     * Test the property 'registrantsConfirmationEmail'
     */
    @Test
    public void registrantsConfirmationEmailTest() {
        // TODO: test registrantsConfirmationEmail
    }

    /**
     * Test the property 'registrantsEmailNotification'
     */
    @Test
    public void registrantsEmailNotificationTest() {
        // TODO: test registrantsEmailNotification
    }

    /**
     * Test the property 'registrationType'
     */
    @Test
    public void registrationTypeTest() {
        // TODO: test registrationType
    }

    /**
     * Test the property 'showShareButton'
     */
    @Test
    public void showShareButtonTest() {
        // TODO: test showShareButton
    }

    /**
     * Test the property 'usePmi'
     */
    @Test
    public void usePmiTest() {
        // TODO: test usePmi
    }

    /**
     * Test the property 'waitingRoom'
     */
    @Test
    public void waitingRoomTest() {
        // TODO: test waitingRoom
    }

    /**
     * Test the property 'watermark'
     */
    @Test
    public void watermarkTest() {
        // TODO: test watermark
    }

    /**
     * Test the property 'hostSaveVideoOrder'
     */
    @Test
    public void hostSaveVideoOrderTest() {
        // TODO: test hostSaveVideoOrder
    }

    /**
     * Test the property 'internalMeeting'
     */
    @Test
    public void internalMeetingTest() {
        // TODO: test internalMeeting
    }

    /**
     * Test the property 'continuousMeetingChat'
     */
    @Test
    public void continuousMeetingChatTest() {
        // TODO: test continuousMeetingChat
    }

    /**
     * Test the property 'participantFocusedMeeting'
     */
    @Test
    public void participantFocusedMeetingTest() {
        // TODO: test participantFocusedMeeting
    }

    /**
     * Test the property 'pushChangeToCalendar'
     */
    @Test
    public void pushChangeToCalendarTest() {
        // TODO: test pushChangeToCalendar
    }

    /**
     * Test the property 'resources'
     */
    @Test
    public void resourcesTest() {
        // TODO: test resources
    }

    /**
     * Test the property 'autoStartMeetingSummary'
     */
    @Test
    public void autoStartMeetingSummaryTest() {
        // TODO: test autoStartMeetingSummary
    }

    /**
     * Test the property 'autoStartAiCompanionQuestions'
     */
    @Test
    public void autoStartAiCompanionQuestionsTest() {
        // TODO: test autoStartAiCompanionQuestions
    }

}
