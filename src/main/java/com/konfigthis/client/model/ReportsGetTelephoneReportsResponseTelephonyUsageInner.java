/*
 * Zoom Meeting API
 * The Zoom Meeting APIs let developers to access information from Zoom. 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ReportsGetTelephoneReportsResponseTelephonyUsageInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ReportsGetTelephoneReportsResponseTelephonyUsageInner {
  public static final String SERIALIZED_NAME_CALL_IN_NUMBER = "call_in_number";
  @SerializedName(SERIALIZED_NAME_CALL_IN_NUMBER)
  private String callInNumber;

  public static final String SERIALIZED_NAME_COUNTRY_NAME = "country_name";
  @SerializedName(SERIALIZED_NAME_COUNTRY_NAME)
  private String countryName;

  public static final String SERIALIZED_NAME_DEPT = "dept";
  @SerializedName(SERIALIZED_NAME_DEPT)
  private String dept;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Integer duration;

  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_HOST_EMAIL = "host_email";
  @SerializedName(SERIALIZED_NAME_HOST_EMAIL)
  private String hostEmail;

  public static final String SERIALIZED_NAME_HOST_ID = "host_id";
  @SerializedName(SERIALIZED_NAME_HOST_ID)
  private String hostId;

  public static final String SERIALIZED_NAME_HOST_NAME = "host_name";
  @SerializedName(SERIALIZED_NAME_HOST_NAME)
  private String hostName;

  public static final String SERIALIZED_NAME_MEETING_ID = "meeting_id";
  @SerializedName(SERIALIZED_NAME_MEETING_ID)
  private Long meetingId;

  public static final String SERIALIZED_NAME_MEETING_TYPE = "meeting_type";
  @SerializedName(SERIALIZED_NAME_MEETING_TYPE)
  private String meetingType;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_RATE = "rate";
  @SerializedName(SERIALIZED_NAME_RATE)
  private Double rate;

  public static final String SERIALIZED_NAME_SIGNALED_NUMBER = "signaled_number";
  @SerializedName(SERIALIZED_NAME_SIGNALED_NUMBER)
  private String signaledNumber;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Double total;

  /**
   * Call type.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
 public enum TypeEnum {
    TOLL_FREE("toll-free"),
    
    CALL_OUT("call-out"),
    
    CALL_IN("call-in"),
    
    US_TOLL_NUMBER("US toll-number"),
    
    GLOBAL_TOLL_NUMBER("global toll-number"),
    
    PREMIUM("premium"),
    
    PREMIUM_CALL_IN("premium call-in"),
    
    TOLL("Toll");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public ReportsGetTelephoneReportsResponseTelephonyUsageInner() {
  }

  public ReportsGetTelephoneReportsResponseTelephonyUsageInner callInNumber(String callInNumber) {
    
    
    
    
    this.callInNumber = callInNumber;
    return this;
  }

   /**
   * Caller&#39;s call-in number.
   * @return callInNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ZoomGW", value = "Caller's call-in number.")

  public String getCallInNumber() {
    return callInNumber;
  }


  public void setCallInNumber(String callInNumber) {
    
    
    
    this.callInNumber = callInNumber;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner countryName(String countryName) {
    
    
    
    
    this.countryName = countryName;
    return this;
  }

   /**
   * Country name.
   * @return countryName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "US", value = "Country name.")

  public String getCountryName() {
    return countryName;
  }


  public void setCountryName(String countryName) {
    
    
    
    this.countryName = countryName;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner dept(String dept) {
    
    
    
    
    this.dept = dept;
    return this;
  }

   /**
   * User department.
   * @return dept
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "HR", value = "User department.")

  public String getDept() {
    return dept;
  }


  public void setDept(String dept) {
    
    
    
    this.dept = dept;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner duration(Integer duration) {
    
    
    
    
    this.duration = duration;
    return this;
  }

   /**
   * Call leg duration
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Call leg duration")

  public Integer getDuration() {
    return duration;
  }


  public void setDuration(Integer duration) {
    
    
    
    this.duration = duration;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner endTime(OffsetDateTime endTime) {
    
    
    
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Call leg end time
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-03-15T07:42:22Z", value = "Call leg end time")

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  public void setEndTime(OffsetDateTime endTime) {
    
    
    
    this.endTime = endTime;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner hostEmail(String hostEmail) {
    
    
    
    
    this.hostEmail = hostEmail;
    return this;
  }

   /**
   * User email.
   * @return hostEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jchill@example.com", value = "User email.")

  public String getHostEmail() {
    return hostEmail;
  }


  public void setHostEmail(String hostEmail) {
    
    
    
    this.hostEmail = hostEmail;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner hostId(String hostId) {
    
    
    
    
    this.hostId = hostId;
    return this;
  }

   /**
   * The user ID of the meeting host.
   * @return hostId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "_Rn_hal7ToG5p0AWwIIsjQ", value = "The user ID of the meeting host.")

  public String getHostId() {
    return hostId;
  }


  public void setHostId(String hostId) {
    
    
    
    this.hostId = hostId;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner hostName(String hostName) {
    
    
    
    
    this.hostName = hostName;
    return this;
  }

   /**
   * User display name.
   * @return hostName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Jill Chill", value = "User display name.")

  public String getHostName() {
    return hostName;
  }


  public void setHostName(String hostName) {
    
    
    
    this.hostName = hostName;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner meetingId(Long meetingId) {
    
    
    
    
    this.meetingId = meetingId;
    return this;
  }

   /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &amp;quot;**long**&amp;quot; format(represented as int64 data type in JSON), also known as the meeting number.
   * @return meetingId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "94908911701", value = "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number.")

  public Long getMeetingId() {
    return meetingId;
  }


  public void setMeetingId(Long meetingId) {
    
    
    
    this.meetingId = meetingId;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner meetingType(String meetingType) {
    
    
    
    
    this.meetingType = meetingType;
    return this;
  }

   /**
   * Meeting type.
   * @return meetingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Meeting", value = "Meeting type.")

  public String getMeetingType() {
    return meetingType;
  }


  public void setMeetingType(String meetingType) {
    
    
    
    this.meetingType = meetingType;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner phoneNumber(String phoneNumber) {
    
    
    
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Toll-free telephone number. 
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+1 8243", value = "Toll-free telephone number. ")

  public String getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(String phoneNumber) {
    
    
    
    this.phoneNumber = phoneNumber;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner rate(Double rate) {
    
    
    
    
    this.rate = rate;
    return this;
  }

  public ReportsGetTelephoneReportsResponseTelephonyUsageInner rate(Integer rate) {
    
    
    
    
    this.rate = rate.doubleValue();
    return this;
  }

   /**
   * Calling rate for the telephone call.
   * @return rate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.03", value = "Calling rate for the telephone call.")

  public Double getRate() {
    return rate;
  }


  public void setRate(Double rate) {
    
    
    
    this.rate = rate;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner signaledNumber(String signaledNumber) {
    
    
    
    
    this.signaledNumber = signaledNumber;
    return this;
  }

   /**
   * The number that is signaled to Zoom. 
   * @return signaledNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+1 8243", value = "The number that is signaled to Zoom. ")

  public String getSignaledNumber() {
    return signaledNumber;
  }


  public void setSignaledNumber(String signaledNumber) {
    
    
    
    this.signaledNumber = signaledNumber;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner startTime(OffsetDateTime startTime) {
    
    
    
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Call leg start time
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-03-15T07:40:46Z", value = "Call leg start time")

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  public void setStartTime(OffsetDateTime startTime) {
    
    
    
    this.startTime = startTime;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner total(Double total) {
    
    
    
    
    this.total = total;
    return this;
  }

  public ReportsGetTelephoneReportsResponseTelephonyUsageInner total(Integer total) {
    
    
    
    
    this.total = total.doubleValue();
    return this;
  }

   /**
   * Total cost (USD) for Call Out. Calculated as plan rate by duration.
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.03", value = "Total cost (USD) for Call Out. Calculated as plan rate by duration.")

  public Double getTotal() {
    return total;
  }


  public void setTotal(Double total) {
    
    
    
    this.total = total;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner type(TypeEnum type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * Call type.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CALL_OUT", value = "Call type.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    
    
    
    this.type = type;
  }


  public ReportsGetTelephoneReportsResponseTelephonyUsageInner uuid(String uuid) {
    
    
    
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Meeting UUID.
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4444AAAiAAAAAiAiAiiAii==", value = "Meeting UUID.")

  public String getUuid() {
    return uuid;
  }


  public void setUuid(String uuid) {
    
    
    
    this.uuid = uuid;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ReportsGetTelephoneReportsResponseTelephonyUsageInner instance itself
   */
  public ReportsGetTelephoneReportsResponseTelephonyUsageInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportsGetTelephoneReportsResponseTelephonyUsageInner reportsGetTelephoneReportsResponseTelephonyUsageInner = (ReportsGetTelephoneReportsResponseTelephonyUsageInner) o;
    return Objects.equals(this.callInNumber, reportsGetTelephoneReportsResponseTelephonyUsageInner.callInNumber) &&
        Objects.equals(this.countryName, reportsGetTelephoneReportsResponseTelephonyUsageInner.countryName) &&
        Objects.equals(this.dept, reportsGetTelephoneReportsResponseTelephonyUsageInner.dept) &&
        Objects.equals(this.duration, reportsGetTelephoneReportsResponseTelephonyUsageInner.duration) &&
        Objects.equals(this.endTime, reportsGetTelephoneReportsResponseTelephonyUsageInner.endTime) &&
        Objects.equals(this.hostEmail, reportsGetTelephoneReportsResponseTelephonyUsageInner.hostEmail) &&
        Objects.equals(this.hostId, reportsGetTelephoneReportsResponseTelephonyUsageInner.hostId) &&
        Objects.equals(this.hostName, reportsGetTelephoneReportsResponseTelephonyUsageInner.hostName) &&
        Objects.equals(this.meetingId, reportsGetTelephoneReportsResponseTelephonyUsageInner.meetingId) &&
        Objects.equals(this.meetingType, reportsGetTelephoneReportsResponseTelephonyUsageInner.meetingType) &&
        Objects.equals(this.phoneNumber, reportsGetTelephoneReportsResponseTelephonyUsageInner.phoneNumber) &&
        Objects.equals(this.rate, reportsGetTelephoneReportsResponseTelephonyUsageInner.rate) &&
        Objects.equals(this.signaledNumber, reportsGetTelephoneReportsResponseTelephonyUsageInner.signaledNumber) &&
        Objects.equals(this.startTime, reportsGetTelephoneReportsResponseTelephonyUsageInner.startTime) &&
        Objects.equals(this.total, reportsGetTelephoneReportsResponseTelephonyUsageInner.total) &&
        Objects.equals(this.type, reportsGetTelephoneReportsResponseTelephonyUsageInner.type) &&
        Objects.equals(this.uuid, reportsGetTelephoneReportsResponseTelephonyUsageInner.uuid)&&
        Objects.equals(this.additionalProperties, reportsGetTelephoneReportsResponseTelephonyUsageInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callInNumber, countryName, dept, duration, endTime, hostEmail, hostId, hostName, meetingId, meetingType, phoneNumber, rate, signaledNumber, startTime, total, type, uuid, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportsGetTelephoneReportsResponseTelephonyUsageInner {\n");
    sb.append("    callInNumber: ").append(toIndentedString(callInNumber)).append("\n");
    sb.append("    countryName: ").append(toIndentedString(countryName)).append("\n");
    sb.append("    dept: ").append(toIndentedString(dept)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    hostEmail: ").append(toIndentedString(hostEmail)).append("\n");
    sb.append("    hostId: ").append(toIndentedString(hostId)).append("\n");
    sb.append("    hostName: ").append(toIndentedString(hostName)).append("\n");
    sb.append("    meetingId: ").append(toIndentedString(meetingId)).append("\n");
    sb.append("    meetingType: ").append(toIndentedString(meetingType)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    signaledNumber: ").append(toIndentedString(signaledNumber)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("call_in_number");
    openapiFields.add("country_name");
    openapiFields.add("dept");
    openapiFields.add("duration");
    openapiFields.add("end_time");
    openapiFields.add("host_email");
    openapiFields.add("host_id");
    openapiFields.add("host_name");
    openapiFields.add("meeting_id");
    openapiFields.add("meeting_type");
    openapiFields.add("phone_number");
    openapiFields.add("rate");
    openapiFields.add("signaled_number");
    openapiFields.add("start_time");
    openapiFields.add("total");
    openapiFields.add("type");
    openapiFields.add("uuid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ReportsGetTelephoneReportsResponseTelephonyUsageInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ReportsGetTelephoneReportsResponseTelephonyUsageInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReportsGetTelephoneReportsResponseTelephonyUsageInner is not found in the empty JSON string", ReportsGetTelephoneReportsResponseTelephonyUsageInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("call_in_number") != null && !jsonObj.get("call_in_number").isJsonNull()) && !jsonObj.get("call_in_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `call_in_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("call_in_number").toString()));
      }
      if ((jsonObj.get("country_name") != null && !jsonObj.get("country_name").isJsonNull()) && !jsonObj.get("country_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_name").toString()));
      }
      if ((jsonObj.get("dept") != null && !jsonObj.get("dept").isJsonNull()) && !jsonObj.get("dept").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dept` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dept").toString()));
      }
      if ((jsonObj.get("host_email") != null && !jsonObj.get("host_email").isJsonNull()) && !jsonObj.get("host_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_email").toString()));
      }
      if ((jsonObj.get("host_id") != null && !jsonObj.get("host_id").isJsonNull()) && !jsonObj.get("host_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_id").toString()));
      }
      if ((jsonObj.get("host_name") != null && !jsonObj.get("host_name").isJsonNull()) && !jsonObj.get("host_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_name").toString()));
      }
      if ((jsonObj.get("meeting_type") != null && !jsonObj.get("meeting_type").isJsonNull()) && !jsonObj.get("meeting_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meeting_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meeting_type").toString()));
      }
      if ((jsonObj.get("phone_number") != null && !jsonObj.get("phone_number").isJsonNull()) && !jsonObj.get("phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone_number").toString()));
      }
      if ((jsonObj.get("signaled_number") != null && !jsonObj.get("signaled_number").isJsonNull()) && !jsonObj.get("signaled_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signaled_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signaled_number").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("uuid") != null && !jsonObj.get("uuid").isJsonNull()) && !jsonObj.get("uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uuid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReportsGetTelephoneReportsResponseTelephonyUsageInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReportsGetTelephoneReportsResponseTelephonyUsageInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReportsGetTelephoneReportsResponseTelephonyUsageInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReportsGetTelephoneReportsResponseTelephonyUsageInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ReportsGetTelephoneReportsResponseTelephonyUsageInner>() {
           @Override
           public void write(JsonWriter out, ReportsGetTelephoneReportsResponseTelephonyUsageInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ReportsGetTelephoneReportsResponseTelephonyUsageInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ReportsGetTelephoneReportsResponseTelephonyUsageInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ReportsGetTelephoneReportsResponseTelephonyUsageInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ReportsGetTelephoneReportsResponseTelephonyUsageInner
  * @throws IOException if the JSON string is invalid with respect to ReportsGetTelephoneReportsResponseTelephonyUsageInner
  */
  public static ReportsGetTelephoneReportsResponseTelephonyUsageInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReportsGetTelephoneReportsResponseTelephonyUsageInner.class);
  }

 /**
  * Convert an instance of ReportsGetTelephoneReportsResponseTelephonyUsageInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

