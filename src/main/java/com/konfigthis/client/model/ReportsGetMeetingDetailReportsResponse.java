/*
 * Zoom Meeting API
 * The Zoom Meeting APIs let developers to access information from Zoom. 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ReportsGetMeetingDetailReportsResponseCustomKeysInner;
import com.konfigthis.client.model.ReportsGetMeetingDetailReportsResponseTrackingFieldsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ReportsGetMeetingDetailReportsResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ReportsGetMeetingDetailReportsResponse {
  public static final String SERIALIZED_NAME_CUSTOM_KEYS = "custom_keys";
  @SerializedName(SERIALIZED_NAME_CUSTOM_KEYS)
  private List<ReportsGetMeetingDetailReportsResponseCustomKeysInner> customKeys = null;

  public static final String SERIALIZED_NAME_DEPT = "dept";
  @SerializedName(SERIALIZED_NAME_DEPT)
  private String dept;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Integer duration;

  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_PARTICIPANTS_COUNT = "participants_count";
  @SerializedName(SERIALIZED_NAME_PARTICIPANTS_COUNT)
  private Integer participantsCount;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_TOPIC = "topic";
  @SerializedName(SERIALIZED_NAME_TOPIC)
  private String topic;

  public static final String SERIALIZED_NAME_TOTAL_MINUTES = "total_minutes";
  @SerializedName(SERIALIZED_NAME_TOTAL_MINUTES)
  private Integer totalMinutes;

  public static final String SERIALIZED_NAME_TRACKING_FIELDS = "tracking_fields";
  @SerializedName(SERIALIZED_NAME_TRACKING_FIELDS)
  private List<ReportsGetMeetingDetailReportsResponseTrackingFieldsInner> trackingFields = null;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Integer type;

  public static final String SERIALIZED_NAME_USER_EMAIL = "user_email";
  @SerializedName(SERIALIZED_NAME_USER_EMAIL)
  private String userEmail;

  public static final String SERIALIZED_NAME_USER_NAME = "user_name";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public ReportsGetMeetingDetailReportsResponse() {
  }

  public ReportsGetMeetingDetailReportsResponse customKeys(List<ReportsGetMeetingDetailReportsResponseCustomKeysInner> customKeys) {
    
    
    
    
    this.customKeys = customKeys;
    return this;
  }

  public ReportsGetMeetingDetailReportsResponse addCustomKeysItem(ReportsGetMeetingDetailReportsResponseCustomKeysInner customKeysItem) {
    if (this.customKeys == null) {
      this.customKeys = new ArrayList<>();
    }
    this.customKeys.add(customKeysItem);
    return this;
  }

   /**
   * Custom keys and values assigned to the meeting.
   * @return customKeys
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom keys and values assigned to the meeting.")

  public List<ReportsGetMeetingDetailReportsResponseCustomKeysInner> getCustomKeys() {
    return customKeys;
  }


  public void setCustomKeys(List<ReportsGetMeetingDetailReportsResponseCustomKeysInner> customKeys) {
    
    
    
    this.customKeys = customKeys;
  }


  public ReportsGetMeetingDetailReportsResponse dept(String dept) {
    
    
    
    
    this.dept = dept;
    return this;
  }

   /**
   * Department of the host.
   * @return dept
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "HR", value = "Department of the host.")

  public String getDept() {
    return dept;
  }


  public void setDept(String dept) {
    
    
    
    this.dept = dept;
  }


  public ReportsGetMeetingDetailReportsResponse duration(Integer duration) {
    
    
    
    
    this.duration = duration;
    return this;
  }

   /**
   * Meeting duration.
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Meeting duration.")

  public Integer getDuration() {
    return duration;
  }


  public void setDuration(Integer duration) {
    
    
    
    this.duration = duration;
  }


  public ReportsGetMeetingDetailReportsResponse endTime(OffsetDateTime endTime) {
    
    
    
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Meeting end time.
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-03-15T07:42:22Z", value = "Meeting end time.")

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  public void setEndTime(OffsetDateTime endTime) {
    
    
    
    this.endTime = endTime;
  }


  public ReportsGetMeetingDetailReportsResponse id(Long id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &amp;quot;**long**&amp;quot; format(represented as int64 data type in JSON), also known as the meeting number.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3927350525", value = "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number.")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    
    
    
    this.id = id;
  }


  public ReportsGetMeetingDetailReportsResponse participantsCount(Integer participantsCount) {
    
    
    
    
    this.participantsCount = participantsCount;
    return this;
  }

   /**
   * Number of meeting participants.
   * @return participantsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Number of meeting participants.")

  public Integer getParticipantsCount() {
    return participantsCount;
  }


  public void setParticipantsCount(Integer participantsCount) {
    
    
    
    this.participantsCount = participantsCount;
  }


  public ReportsGetMeetingDetailReportsResponse startTime(OffsetDateTime startTime) {
    
    
    
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Meeting start time.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-03-15T07:40:46Z", value = "Meeting start time.")

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  public void setStartTime(OffsetDateTime startTime) {
    
    
    
    this.startTime = startTime;
  }


  public ReportsGetMeetingDetailReportsResponse topic(String topic) {
    
    
    
    
    this.topic = topic;
    return this;
  }

   /**
   * Meeting topic.
   * @return topic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "My Meeting", value = "Meeting topic.")

  public String getTopic() {
    return topic;
  }


  public void setTopic(String topic) {
    
    
    
    this.topic = topic;
  }


  public ReportsGetMeetingDetailReportsResponse totalMinutes(Integer totalMinutes) {
    
    
    
    
    this.totalMinutes = totalMinutes;
    return this;
  }

   /**
   * Number of meeting minutes. This represents the total amount of meeting minutes attended by each participant including the host, for meetings hosted by the user. For instance if there were one host(named A) and one participant(named B) in a meeting, the value of total_minutes would be calculated as below:  **total_minutes** &#x3D; Total Meeting Attendance Minutes of A + Total Meeting Attendance Minutes of B
   * @return totalMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Number of meeting minutes. This represents the total amount of meeting minutes attended by each participant including the host, for meetings hosted by the user. For instance if there were one host(named A) and one participant(named B) in a meeting, the value of total_minutes would be calculated as below:  **total_minutes** = Total Meeting Attendance Minutes of A + Total Meeting Attendance Minutes of B")

  public Integer getTotalMinutes() {
    return totalMinutes;
  }


  public void setTotalMinutes(Integer totalMinutes) {
    
    
    
    this.totalMinutes = totalMinutes;
  }


  public ReportsGetMeetingDetailReportsResponse trackingFields(List<ReportsGetMeetingDetailReportsResponseTrackingFieldsInner> trackingFields) {
    
    
    
    
    this.trackingFields = trackingFields;
    return this;
  }

  public ReportsGetMeetingDetailReportsResponse addTrackingFieldsItem(ReportsGetMeetingDetailReportsResponseTrackingFieldsInner trackingFieldsItem) {
    if (this.trackingFields == null) {
      this.trackingFields = new ArrayList<>();
    }
    this.trackingFields.add(trackingFieldsItem);
    return this;
  }

   /**
   * Tracking fields.
   * @return trackingFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tracking fields.")

  public List<ReportsGetMeetingDetailReportsResponseTrackingFieldsInner> getTrackingFields() {
    return trackingFields;
  }


  public void setTrackingFields(List<ReportsGetMeetingDetailReportsResponseTrackingFieldsInner> trackingFields) {
    
    
    
    this.trackingFields = trackingFields;
  }


  public ReportsGetMeetingDetailReportsResponse type(Integer type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * Meeting type.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Meeting type.")

  public Integer getType() {
    return type;
  }


  public void setType(Integer type) {
    
    
    
    this.type = type;
  }


  public ReportsGetMeetingDetailReportsResponse userEmail(String userEmail) {
    
    
    
    
    this.userEmail = userEmail;
    return this;
  }

   /**
   * User email.
   * @return userEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jchill@example.com", value = "User email.")

  public String getUserEmail() {
    return userEmail;
  }


  public void setUserEmail(String userEmail) {
    
    
    
    this.userEmail = userEmail;
  }


  public ReportsGetMeetingDetailReportsResponse userName(String userName) {
    
    
    
    
    this.userName = userName;
    return this;
  }

   /**
   * User display name.
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Jill Chill", value = "User display name.")

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    
    
    
    this.userName = userName;
  }


  public ReportsGetMeetingDetailReportsResponse uuid(String uuid) {
    
    
    
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). [Double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a &#39;/&#39; or contains &#39;//&#39; in it.
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "iOTQZPmhTUq5a232ETb9eg==", value = "Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). [Double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.")

  public String getUuid() {
    return uuid;
  }


  public void setUuid(String uuid) {
    
    
    
    this.uuid = uuid;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ReportsGetMeetingDetailReportsResponse instance itself
   */
  public ReportsGetMeetingDetailReportsResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportsGetMeetingDetailReportsResponse reportsGetMeetingDetailReportsResponse = (ReportsGetMeetingDetailReportsResponse) o;
    return Objects.equals(this.customKeys, reportsGetMeetingDetailReportsResponse.customKeys) &&
        Objects.equals(this.dept, reportsGetMeetingDetailReportsResponse.dept) &&
        Objects.equals(this.duration, reportsGetMeetingDetailReportsResponse.duration) &&
        Objects.equals(this.endTime, reportsGetMeetingDetailReportsResponse.endTime) &&
        Objects.equals(this.id, reportsGetMeetingDetailReportsResponse.id) &&
        Objects.equals(this.participantsCount, reportsGetMeetingDetailReportsResponse.participantsCount) &&
        Objects.equals(this.startTime, reportsGetMeetingDetailReportsResponse.startTime) &&
        Objects.equals(this.topic, reportsGetMeetingDetailReportsResponse.topic) &&
        Objects.equals(this.totalMinutes, reportsGetMeetingDetailReportsResponse.totalMinutes) &&
        Objects.equals(this.trackingFields, reportsGetMeetingDetailReportsResponse.trackingFields) &&
        Objects.equals(this.type, reportsGetMeetingDetailReportsResponse.type) &&
        Objects.equals(this.userEmail, reportsGetMeetingDetailReportsResponse.userEmail) &&
        Objects.equals(this.userName, reportsGetMeetingDetailReportsResponse.userName) &&
        Objects.equals(this.uuid, reportsGetMeetingDetailReportsResponse.uuid)&&
        Objects.equals(this.additionalProperties, reportsGetMeetingDetailReportsResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customKeys, dept, duration, endTime, id, participantsCount, startTime, topic, totalMinutes, trackingFields, type, userEmail, userName, uuid, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportsGetMeetingDetailReportsResponse {\n");
    sb.append("    customKeys: ").append(toIndentedString(customKeys)).append("\n");
    sb.append("    dept: ").append(toIndentedString(dept)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    participantsCount: ").append(toIndentedString(participantsCount)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
    sb.append("    totalMinutes: ").append(toIndentedString(totalMinutes)).append("\n");
    sb.append("    trackingFields: ").append(toIndentedString(trackingFields)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userEmail: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("custom_keys");
    openapiFields.add("dept");
    openapiFields.add("duration");
    openapiFields.add("end_time");
    openapiFields.add("id");
    openapiFields.add("participants_count");
    openapiFields.add("start_time");
    openapiFields.add("topic");
    openapiFields.add("total_minutes");
    openapiFields.add("tracking_fields");
    openapiFields.add("type");
    openapiFields.add("user_email");
    openapiFields.add("user_name");
    openapiFields.add("uuid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ReportsGetMeetingDetailReportsResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ReportsGetMeetingDetailReportsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReportsGetMeetingDetailReportsResponse is not found in the empty JSON string", ReportsGetMeetingDetailReportsResponse.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("custom_keys") != null && !jsonObj.get("custom_keys").isJsonNull()) {
        JsonArray jsonArraycustomKeys = jsonObj.getAsJsonArray("custom_keys");
        if (jsonArraycustomKeys != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_keys").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_keys` to be an array in the JSON string but got `%s`", jsonObj.get("custom_keys").toString()));
          }

          // validate the optional field `custom_keys` (array)
          for (int i = 0; i < jsonArraycustomKeys.size(); i++) {
            ReportsGetMeetingDetailReportsResponseCustomKeysInner.validateJsonObject(jsonArraycustomKeys.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("dept") != null && !jsonObj.get("dept").isJsonNull()) && !jsonObj.get("dept").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dept` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dept").toString()));
      }
      if ((jsonObj.get("topic") != null && !jsonObj.get("topic").isJsonNull()) && !jsonObj.get("topic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topic").toString()));
      }
      if (jsonObj.get("tracking_fields") != null && !jsonObj.get("tracking_fields").isJsonNull()) {
        JsonArray jsonArraytrackingFields = jsonObj.getAsJsonArray("tracking_fields");
        if (jsonArraytrackingFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tracking_fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tracking_fields` to be an array in the JSON string but got `%s`", jsonObj.get("tracking_fields").toString()));
          }

          // validate the optional field `tracking_fields` (array)
          for (int i = 0; i < jsonArraytrackingFields.size(); i++) {
            ReportsGetMeetingDetailReportsResponseTrackingFieldsInner.validateJsonObject(jsonArraytrackingFields.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("user_email") != null && !jsonObj.get("user_email").isJsonNull()) && !jsonObj.get("user_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_email").toString()));
      }
      if ((jsonObj.get("user_name") != null && !jsonObj.get("user_name").isJsonNull()) && !jsonObj.get("user_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_name").toString()));
      }
      if ((jsonObj.get("uuid") != null && !jsonObj.get("uuid").isJsonNull()) && !jsonObj.get("uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uuid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReportsGetMeetingDetailReportsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReportsGetMeetingDetailReportsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReportsGetMeetingDetailReportsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReportsGetMeetingDetailReportsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ReportsGetMeetingDetailReportsResponse>() {
           @Override
           public void write(JsonWriter out, ReportsGetMeetingDetailReportsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ReportsGetMeetingDetailReportsResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ReportsGetMeetingDetailReportsResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ReportsGetMeetingDetailReportsResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ReportsGetMeetingDetailReportsResponse
  * @throws IOException if the JSON string is invalid with respect to ReportsGetMeetingDetailReportsResponse
  */
  public static ReportsGetMeetingDetailReportsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReportsGetMeetingDetailReportsResponse.class);
  }

 /**
  * Convert an instance of ReportsGetMeetingDetailReportsResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

