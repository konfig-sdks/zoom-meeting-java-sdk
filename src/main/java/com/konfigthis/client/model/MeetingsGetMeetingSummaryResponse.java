/*
 * Zoom Meeting API
 * The Zoom Meeting APIs let developers to access information from Zoom. 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.MeetingsGetMeetingSummaryResponseEditedSummary;
import com.konfigthis.client.model.MeetingsGetMeetingSummaryResponseSummaryDetailsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * MeetingsGetMeetingSummaryResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class MeetingsGetMeetingSummaryResponse {
  public static final String SERIALIZED_NAME_MEETING_HOST_ID = "meeting_host_id";
  @SerializedName(SERIALIZED_NAME_MEETING_HOST_ID)
  private String meetingHostId;

  public static final String SERIALIZED_NAME_MEETING_HOST_EMAIL = "meeting_host_email";
  @SerializedName(SERIALIZED_NAME_MEETING_HOST_EMAIL)
  private String meetingHostEmail;

  public static final String SERIALIZED_NAME_MEETING_UUID = "meeting_uuid";
  @SerializedName(SERIALIZED_NAME_MEETING_UUID)
  private String meetingUuid;

  public static final String SERIALIZED_NAME_MEETING_ID = "meeting_id";
  @SerializedName(SERIALIZED_NAME_MEETING_ID)
  private Long meetingId;

  public static final String SERIALIZED_NAME_MEETING_TOPIC = "meeting_topic";
  @SerializedName(SERIALIZED_NAME_MEETING_TOPIC)
  private String meetingTopic;

  public static final String SERIALIZED_NAME_MEETING_START_TIME = "meeting_start_time";
  @SerializedName(SERIALIZED_NAME_MEETING_START_TIME)
  private OffsetDateTime meetingStartTime;

  public static final String SERIALIZED_NAME_MEETING_END_TIME = "meeting_end_time";
  @SerializedName(SERIALIZED_NAME_MEETING_END_TIME)
  private OffsetDateTime meetingEndTime;

  public static final String SERIALIZED_NAME_SUMMARY_START_TIME = "summary_start_time";
  @SerializedName(SERIALIZED_NAME_SUMMARY_START_TIME)
  private OffsetDateTime summaryStartTime;

  public static final String SERIALIZED_NAME_SUMMARY_END_TIME = "summary_end_time";
  @SerializedName(SERIALIZED_NAME_SUMMARY_END_TIME)
  private OffsetDateTime summaryEndTime;

  public static final String SERIALIZED_NAME_SUMMARY_CREATED_TIME = "summary_created_time";
  @SerializedName(SERIALIZED_NAME_SUMMARY_CREATED_TIME)
  private OffsetDateTime summaryCreatedTime;

  public static final String SERIALIZED_NAME_SUMMARY_LAST_MODIFIED_TIME = "summary_last_modified_time";
  @SerializedName(SERIALIZED_NAME_SUMMARY_LAST_MODIFIED_TIME)
  private OffsetDateTime summaryLastModifiedTime;

  public static final String SERIALIZED_NAME_SUMMARY_TITLE = "summary_title";
  @SerializedName(SERIALIZED_NAME_SUMMARY_TITLE)
  private String summaryTitle;

  public static final String SERIALIZED_NAME_SUMMARY_OVERVIEW = "summary_overview";
  @SerializedName(SERIALIZED_NAME_SUMMARY_OVERVIEW)
  private String summaryOverview;

  public static final String SERIALIZED_NAME_SUMMARY_DETAILS = "summary_details";
  @SerializedName(SERIALIZED_NAME_SUMMARY_DETAILS)
  private List<MeetingsGetMeetingSummaryResponseSummaryDetailsInner> summaryDetails = null;

  public static final String SERIALIZED_NAME_NEXT_STEPS = "next_steps";
  @SerializedName(SERIALIZED_NAME_NEXT_STEPS)
  private List<String> nextSteps = null;

  public static final String SERIALIZED_NAME_EDITED_SUMMARY = "edited_summary";
  @SerializedName(SERIALIZED_NAME_EDITED_SUMMARY)
  private MeetingsGetMeetingSummaryResponseEditedSummary editedSummary;

  public MeetingsGetMeetingSummaryResponse() {
  }

  public MeetingsGetMeetingSummaryResponse meetingHostId(String meetingHostId) {
    
    
    
    
    this.meetingHostId = meetingHostId;
    return this;
  }

   /**
   * The ID of the user who is set as the meeting host.
   * @return meetingHostId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "30R7kT7bTIKSNUFEuH_Qlg", value = "The ID of the user who is set as the meeting host.")

  public String getMeetingHostId() {
    return meetingHostId;
  }


  public void setMeetingHostId(String meetingHostId) {
    
    
    
    this.meetingHostId = meetingHostId;
  }


  public MeetingsGetMeetingSummaryResponse meetingHostEmail(String meetingHostEmail) {
    
    
    
    
    this.meetingHostEmail = meetingHostEmail;
    return this;
  }

   /**
   * The meeting host&#39;s email address.
   * @return meetingHostEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jchill@example.com", value = "The meeting host's email address.")

  public String getMeetingHostEmail() {
    return meetingHostEmail;
  }


  public void setMeetingHostEmail(String meetingHostEmail) {
    
    
    
    this.meetingHostEmail = meetingHostEmail;
  }


  public MeetingsGetMeetingSummaryResponse meetingUuid(String meetingUuid) {
    
    
    
    
    this.meetingUuid = meetingUuid;
    return this;
  }

   /**
   * The unique meeting ID.   Each meeting instance generates its own meeting UUID. After a meeting ends, a new UUID is generated for the next instance of the meeting.   Use the [**List past meeting instances**](https://developers.zoom.us) API to retrieve a list of UUIDs from past meeting instances. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a &#x60;/&#x60; or contains &#x60;//&#x60; in it. 
   * @return meetingUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "aDYlohsHRtCd4ii1uC2+hA==", value = "The unique meeting ID.   Each meeting instance generates its own meeting UUID. After a meeting ends, a new UUID is generated for the next instance of the meeting.   Use the [**List past meeting instances**](https://developers.zoom.us) API to retrieve a list of UUIDs from past meeting instances. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it. ")

  public String getMeetingUuid() {
    return meetingUuid;
  }


  public void setMeetingUuid(String meetingUuid) {
    
    
    
    this.meetingUuid = meetingUuid;
  }


  public MeetingsGetMeetingSummaryResponse meetingId(Long meetingId) {
    
    
    
    
    this.meetingId = meetingId;
    return this;
  }

   /**
   * [The meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-)  The meeting&#39;s unique identifier in **long** format, represented as int64 data type in JSON. Also known as the meeting number.
   * @return meetingId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "97763643886", value = "[The meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-)  The meeting's unique identifier in **long** format, represented as int64 data type in JSON. Also known as the meeting number.")

  public Long getMeetingId() {
    return meetingId;
  }


  public void setMeetingId(Long meetingId) {
    
    
    
    this.meetingId = meetingId;
  }


  public MeetingsGetMeetingSummaryResponse meetingTopic(String meetingTopic) {
    
    
    
    
    this.meetingTopic = meetingTopic;
    return this;
  }

   /**
   * The meeting topic.
   * @return meetingTopic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "My Meeting", value = "The meeting topic.")

  public String getMeetingTopic() {
    return meetingTopic;
  }


  public void setMeetingTopic(String meetingTopic) {
    
    
    
    this.meetingTopic = meetingTopic;
  }


  public MeetingsGetMeetingSummaryResponse meetingStartTime(OffsetDateTime meetingStartTime) {
    
    
    
    
    this.meetingStartTime = meetingStartTime;
    return this;
  }

   /**
   * The meeting&#39;s start date and time.
   * @return meetingStartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-07-15T23:24:52Z", value = "The meeting's start date and time.")

  public OffsetDateTime getMeetingStartTime() {
    return meetingStartTime;
  }


  public void setMeetingStartTime(OffsetDateTime meetingStartTime) {
    
    
    
    this.meetingStartTime = meetingStartTime;
  }


  public MeetingsGetMeetingSummaryResponse meetingEndTime(OffsetDateTime meetingEndTime) {
    
    
    
    
    this.meetingEndTime = meetingEndTime;
    return this;
  }

   /**
   * The meeting&#39;s end date and time.
   * @return meetingEndTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-07-15T23:30:19Z", value = "The meeting's end date and time.")

  public OffsetDateTime getMeetingEndTime() {
    return meetingEndTime;
  }


  public void setMeetingEndTime(OffsetDateTime meetingEndTime) {
    
    
    
    this.meetingEndTime = meetingEndTime;
  }


  public MeetingsGetMeetingSummaryResponse summaryStartTime(OffsetDateTime summaryStartTime) {
    
    
    
    
    this.summaryStartTime = summaryStartTime;
    return this;
  }

   /**
   * The summary&#39;s start date and time.
   * @return summaryStartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-07-15T23:24:52Z", value = "The summary's start date and time.")

  public OffsetDateTime getSummaryStartTime() {
    return summaryStartTime;
  }


  public void setSummaryStartTime(OffsetDateTime summaryStartTime) {
    
    
    
    this.summaryStartTime = summaryStartTime;
  }


  public MeetingsGetMeetingSummaryResponse summaryEndTime(OffsetDateTime summaryEndTime) {
    
    
    
    
    this.summaryEndTime = summaryEndTime;
    return this;
  }

   /**
   * The summary&#39;s end date and time.
   * @return summaryEndTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-07-15T23:30:19Z", value = "The summary's end date and time.")

  public OffsetDateTime getSummaryEndTime() {
    return summaryEndTime;
  }


  public void setSummaryEndTime(OffsetDateTime summaryEndTime) {
    
    
    
    this.summaryEndTime = summaryEndTime;
  }


  public MeetingsGetMeetingSummaryResponse summaryCreatedTime(OffsetDateTime summaryCreatedTime) {
    
    
    
    
    this.summaryCreatedTime = summaryCreatedTime;
    return this;
  }

   /**
   * The date and time when the meeting summary was created.
   * @return summaryCreatedTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-07-15T23:24:52Z", value = "The date and time when the meeting summary was created.")

  public OffsetDateTime getSummaryCreatedTime() {
    return summaryCreatedTime;
  }


  public void setSummaryCreatedTime(OffsetDateTime summaryCreatedTime) {
    
    
    
    this.summaryCreatedTime = summaryCreatedTime;
  }


  public MeetingsGetMeetingSummaryResponse summaryLastModifiedTime(OffsetDateTime summaryLastModifiedTime) {
    
    
    
    
    this.summaryLastModifiedTime = summaryLastModifiedTime;
    return this;
  }

   /**
   * The date and time when the meeting summary was last modified.
   * @return summaryLastModifiedTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-07-15T23:30:19Z", value = "The date and time when the meeting summary was last modified.")

  public OffsetDateTime getSummaryLastModifiedTime() {
    return summaryLastModifiedTime;
  }


  public void setSummaryLastModifiedTime(OffsetDateTime summaryLastModifiedTime) {
    
    
    
    this.summaryLastModifiedTime = summaryLastModifiedTime;
  }


  public MeetingsGetMeetingSummaryResponse summaryTitle(String summaryTitle) {
    
    
    
    
    this.summaryTitle = summaryTitle;
    return this;
  }

   /**
   * The summary title.
   * @return summaryTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Meeting summary for my meeting", value = "The summary title.")

  public String getSummaryTitle() {
    return summaryTitle;
  }


  public void setSummaryTitle(String summaryTitle) {
    
    
    
    this.summaryTitle = summaryTitle;
  }


  public MeetingsGetMeetingSummaryResponse summaryOverview(String summaryOverview) {
    
    
    
    
    this.summaryOverview = summaryOverview;
    return this;
  }

   /**
   * The summary overview.
   * @return summaryOverview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Meeting overview", value = "The summary overview.")

  public String getSummaryOverview() {
    return summaryOverview;
  }


  public void setSummaryOverview(String summaryOverview) {
    
    
    
    this.summaryOverview = summaryOverview;
  }


  public MeetingsGetMeetingSummaryResponse summaryDetails(List<MeetingsGetMeetingSummaryResponseSummaryDetailsInner> summaryDetails) {
    
    
    
    
    this.summaryDetails = summaryDetails;
    return this;
  }

  public MeetingsGetMeetingSummaryResponse addSummaryDetailsItem(MeetingsGetMeetingSummaryResponseSummaryDetailsInner summaryDetailsItem) {
    if (this.summaryDetails == null) {
      this.summaryDetails = new ArrayList<>();
    }
    this.summaryDetails.add(summaryDetailsItem);
    return this;
  }

   /**
   * The summary content details.
   * @return summaryDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The summary content details.")

  public List<MeetingsGetMeetingSummaryResponseSummaryDetailsInner> getSummaryDetails() {
    return summaryDetails;
  }


  public void setSummaryDetails(List<MeetingsGetMeetingSummaryResponseSummaryDetailsInner> summaryDetails) {
    
    
    
    this.summaryDetails = summaryDetails;
  }


  public MeetingsGetMeetingSummaryResponse nextSteps(List<String> nextSteps) {
    
    
    
    
    this.nextSteps = nextSteps;
    return this;
  }

  public MeetingsGetMeetingSummaryResponse addNextStepsItem(String nextStepsItem) {
    if (this.nextSteps == null) {
      this.nextSteps = new ArrayList<>();
    }
    this.nextSteps.add(nextStepsItem);
    return this;
  }

   /**
   * The next steps.
   * @return nextSteps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The next steps.")

  public List<String> getNextSteps() {
    return nextSteps;
  }


  public void setNextSteps(List<String> nextSteps) {
    
    
    
    this.nextSteps = nextSteps;
  }


  public MeetingsGetMeetingSummaryResponse editedSummary(MeetingsGetMeetingSummaryResponseEditedSummary editedSummary) {
    
    
    
    
    this.editedSummary = editedSummary;
    return this;
  }

   /**
   * Get editedSummary
   * @return editedSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MeetingsGetMeetingSummaryResponseEditedSummary getEditedSummary() {
    return editedSummary;
  }


  public void setEditedSummary(MeetingsGetMeetingSummaryResponseEditedSummary editedSummary) {
    
    
    
    this.editedSummary = editedSummary;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the MeetingsGetMeetingSummaryResponse instance itself
   */
  public MeetingsGetMeetingSummaryResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MeetingsGetMeetingSummaryResponse meetingsGetMeetingSummaryResponse = (MeetingsGetMeetingSummaryResponse) o;
    return Objects.equals(this.meetingHostId, meetingsGetMeetingSummaryResponse.meetingHostId) &&
        Objects.equals(this.meetingHostEmail, meetingsGetMeetingSummaryResponse.meetingHostEmail) &&
        Objects.equals(this.meetingUuid, meetingsGetMeetingSummaryResponse.meetingUuid) &&
        Objects.equals(this.meetingId, meetingsGetMeetingSummaryResponse.meetingId) &&
        Objects.equals(this.meetingTopic, meetingsGetMeetingSummaryResponse.meetingTopic) &&
        Objects.equals(this.meetingStartTime, meetingsGetMeetingSummaryResponse.meetingStartTime) &&
        Objects.equals(this.meetingEndTime, meetingsGetMeetingSummaryResponse.meetingEndTime) &&
        Objects.equals(this.summaryStartTime, meetingsGetMeetingSummaryResponse.summaryStartTime) &&
        Objects.equals(this.summaryEndTime, meetingsGetMeetingSummaryResponse.summaryEndTime) &&
        Objects.equals(this.summaryCreatedTime, meetingsGetMeetingSummaryResponse.summaryCreatedTime) &&
        Objects.equals(this.summaryLastModifiedTime, meetingsGetMeetingSummaryResponse.summaryLastModifiedTime) &&
        Objects.equals(this.summaryTitle, meetingsGetMeetingSummaryResponse.summaryTitle) &&
        Objects.equals(this.summaryOverview, meetingsGetMeetingSummaryResponse.summaryOverview) &&
        Objects.equals(this.summaryDetails, meetingsGetMeetingSummaryResponse.summaryDetails) &&
        Objects.equals(this.nextSteps, meetingsGetMeetingSummaryResponse.nextSteps) &&
        Objects.equals(this.editedSummary, meetingsGetMeetingSummaryResponse.editedSummary)&&
        Objects.equals(this.additionalProperties, meetingsGetMeetingSummaryResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meetingHostId, meetingHostEmail, meetingUuid, meetingId, meetingTopic, meetingStartTime, meetingEndTime, summaryStartTime, summaryEndTime, summaryCreatedTime, summaryLastModifiedTime, summaryTitle, summaryOverview, summaryDetails, nextSteps, editedSummary, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MeetingsGetMeetingSummaryResponse {\n");
    sb.append("    meetingHostId: ").append(toIndentedString(meetingHostId)).append("\n");
    sb.append("    meetingHostEmail: ").append(toIndentedString(meetingHostEmail)).append("\n");
    sb.append("    meetingUuid: ").append(toIndentedString(meetingUuid)).append("\n");
    sb.append("    meetingId: ").append(toIndentedString(meetingId)).append("\n");
    sb.append("    meetingTopic: ").append(toIndentedString(meetingTopic)).append("\n");
    sb.append("    meetingStartTime: ").append(toIndentedString(meetingStartTime)).append("\n");
    sb.append("    meetingEndTime: ").append(toIndentedString(meetingEndTime)).append("\n");
    sb.append("    summaryStartTime: ").append(toIndentedString(summaryStartTime)).append("\n");
    sb.append("    summaryEndTime: ").append(toIndentedString(summaryEndTime)).append("\n");
    sb.append("    summaryCreatedTime: ").append(toIndentedString(summaryCreatedTime)).append("\n");
    sb.append("    summaryLastModifiedTime: ").append(toIndentedString(summaryLastModifiedTime)).append("\n");
    sb.append("    summaryTitle: ").append(toIndentedString(summaryTitle)).append("\n");
    sb.append("    summaryOverview: ").append(toIndentedString(summaryOverview)).append("\n");
    sb.append("    summaryDetails: ").append(toIndentedString(summaryDetails)).append("\n");
    sb.append("    nextSteps: ").append(toIndentedString(nextSteps)).append("\n");
    sb.append("    editedSummary: ").append(toIndentedString(editedSummary)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("meeting_host_id");
    openapiFields.add("meeting_host_email");
    openapiFields.add("meeting_uuid");
    openapiFields.add("meeting_id");
    openapiFields.add("meeting_topic");
    openapiFields.add("meeting_start_time");
    openapiFields.add("meeting_end_time");
    openapiFields.add("summary_start_time");
    openapiFields.add("summary_end_time");
    openapiFields.add("summary_created_time");
    openapiFields.add("summary_last_modified_time");
    openapiFields.add("summary_title");
    openapiFields.add("summary_overview");
    openapiFields.add("summary_details");
    openapiFields.add("next_steps");
    openapiFields.add("edited_summary");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to MeetingsGetMeetingSummaryResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!MeetingsGetMeetingSummaryResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MeetingsGetMeetingSummaryResponse is not found in the empty JSON string", MeetingsGetMeetingSummaryResponse.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("meeting_host_id") != null && !jsonObj.get("meeting_host_id").isJsonNull()) && !jsonObj.get("meeting_host_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meeting_host_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meeting_host_id").toString()));
      }
      if ((jsonObj.get("meeting_host_email") != null && !jsonObj.get("meeting_host_email").isJsonNull()) && !jsonObj.get("meeting_host_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meeting_host_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meeting_host_email").toString()));
      }
      if ((jsonObj.get("meeting_uuid") != null && !jsonObj.get("meeting_uuid").isJsonNull()) && !jsonObj.get("meeting_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meeting_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meeting_uuid").toString()));
      }
      if ((jsonObj.get("meeting_topic") != null && !jsonObj.get("meeting_topic").isJsonNull()) && !jsonObj.get("meeting_topic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meeting_topic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meeting_topic").toString()));
      }
      if ((jsonObj.get("summary_title") != null && !jsonObj.get("summary_title").isJsonNull()) && !jsonObj.get("summary_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `summary_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("summary_title").toString()));
      }
      if ((jsonObj.get("summary_overview") != null && !jsonObj.get("summary_overview").isJsonNull()) && !jsonObj.get("summary_overview").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `summary_overview` to be a primitive type in the JSON string but got `%s`", jsonObj.get("summary_overview").toString()));
      }
      if (jsonObj.get("summary_details") != null && !jsonObj.get("summary_details").isJsonNull()) {
        JsonArray jsonArraysummaryDetails = jsonObj.getAsJsonArray("summary_details");
        if (jsonArraysummaryDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("summary_details").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `summary_details` to be an array in the JSON string but got `%s`", jsonObj.get("summary_details").toString()));
          }

          // validate the optional field `summary_details` (array)
          for (int i = 0; i < jsonArraysummaryDetails.size(); i++) {
            MeetingsGetMeetingSummaryResponseSummaryDetailsInner.validateJsonObject(jsonArraysummaryDetails.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("next_steps") != null && !jsonObj.get("next_steps").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_steps` to be an array in the JSON string but got `%s`", jsonObj.get("next_steps").toString()));
      }
      // validate the optional field `edited_summary`
      if (jsonObj.get("edited_summary") != null && !jsonObj.get("edited_summary").isJsonNull()) {
        MeetingsGetMeetingSummaryResponseEditedSummary.validateJsonObject(jsonObj.getAsJsonObject("edited_summary"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MeetingsGetMeetingSummaryResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MeetingsGetMeetingSummaryResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MeetingsGetMeetingSummaryResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MeetingsGetMeetingSummaryResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<MeetingsGetMeetingSummaryResponse>() {
           @Override
           public void write(JsonWriter out, MeetingsGetMeetingSummaryResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public MeetingsGetMeetingSummaryResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             MeetingsGetMeetingSummaryResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MeetingsGetMeetingSummaryResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MeetingsGetMeetingSummaryResponse
  * @throws IOException if the JSON string is invalid with respect to MeetingsGetMeetingSummaryResponse
  */
  public static MeetingsGetMeetingSummaryResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MeetingsGetMeetingSummaryResponse.class);
  }

 /**
  * Convert an instance of MeetingsGetMeetingSummaryResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

