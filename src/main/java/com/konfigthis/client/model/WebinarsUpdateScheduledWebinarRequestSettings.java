/*
 * Zoom Meeting API
 * The Zoom Meeting APIs let developers to access information from Zoom. 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.WebinarsUpdateScheduledWebinarRequestSettingsAttendeesAndPanelistsReminderEmailNotification;
import com.konfigthis.client.model.WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAbsenteesEmailNotification;
import com.konfigthis.client.model.WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAttendeesEmailNotification;
import com.konfigthis.client.model.WebinarsUpdateScheduledWebinarRequestSettingsLanguageInterpretation;
import com.konfigthis.client.model.WebinarsUpdateScheduledWebinarRequestSettingsQuestionAndAnswer;
import com.konfigthis.client.model.WebinarsUpdateScheduledWebinarRequestSettingsSignLanguageInterpretation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Webinar settings.
 */
@ApiModel(description = "Webinar settings.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class WebinarsUpdateScheduledWebinarRequestSettings {
  public static final String SERIALIZED_NAME_ALLOW_MULTIPLE_DEVICES = "allow_multiple_devices";
  @SerializedName(SERIALIZED_NAME_ALLOW_MULTIPLE_DEVICES)
  private Boolean allowMultipleDevices;

  public static final String SERIALIZED_NAME_ALTERNATIVE_HOSTS = "alternative_hosts";
  @SerializedName(SERIALIZED_NAME_ALTERNATIVE_HOSTS)
  private String alternativeHosts;

  public static final String SERIALIZED_NAME_ALTERNATIVE_HOST_UPDATE_POLLS = "alternative_host_update_polls";
  @SerializedName(SERIALIZED_NAME_ALTERNATIVE_HOST_UPDATE_POLLS)
  private Boolean alternativeHostUpdatePolls;

  /**
   * &#x60;0&#x60; - Automatically approve.    &#x60;1&#x60; - Manually approve.    &#x60;2&#x60; - No registration required.
   */
  @JsonAdapter(ApprovalTypeEnum.Adapter.class)
 public enum ApprovalTypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    ApprovalTypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ApprovalTypeEnum fromValue(Integer value) {
      for (ApprovalTypeEnum b : ApprovalTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ApprovalTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ApprovalTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ApprovalTypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return ApprovalTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_APPROVAL_TYPE = "approval_type";
  @SerializedName(SERIALIZED_NAME_APPROVAL_TYPE)
  private ApprovalTypeEnum approvalType = ApprovalTypeEnum.NUMBER_2;

  public static final String SERIALIZED_NAME_ATTENDEES_AND_PANELISTS_REMINDER_EMAIL_NOTIFICATION = "attendees_and_panelists_reminder_email_notification";
  @SerializedName(SERIALIZED_NAME_ATTENDEES_AND_PANELISTS_REMINDER_EMAIL_NOTIFICATION)
  private WebinarsUpdateScheduledWebinarRequestSettingsAttendeesAndPanelistsReminderEmailNotification attendeesAndPanelistsReminderEmailNotification;

  /**
   * Determine how participants can join the audio portion of the webinar.
   */
  @JsonAdapter(AudioEnum.Adapter.class)
 public enum AudioEnum {
    BOTH("both"),
    
    TELEPHONY("telephony"),
    
    VOIP("voip"),
    
    THIRDPARTY("thirdParty");

    private String value;

    AudioEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AudioEnum fromValue(String value) {
      for (AudioEnum b : AudioEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AudioEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AudioEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AudioEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AudioEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_AUDIO = "audio";
  @SerializedName(SERIALIZED_NAME_AUDIO)
  private AudioEnum audio = AudioEnum.BOTH;

  public static final String SERIALIZED_NAME_AUDIO_CONFERENCE_INFO = "audio_conference_info";
  @SerializedName(SERIALIZED_NAME_AUDIO_CONFERENCE_INFO)
  private String audioConferenceInfo;

  public static final String SERIALIZED_NAME_AUTHENTICATION_DOMAINS = "authentication_domains";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_DOMAINS)
  private String authenticationDomains;

  public static final String SERIALIZED_NAME_AUTHENTICATION_NAME = "authentication_name";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_NAME)
  private String authenticationName;

  public static final String SERIALIZED_NAME_AUTHENTICATION_OPTION = "authentication_option";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_OPTION)
  private String authenticationOption;

  /**
   * Automatic recording.   &#x60;local&#x60; - Record on local.    &#x60;cloud&#x60; -  Record on cloud.    &#x60;none&#x60; - Disabled.
   */
  @JsonAdapter(AutoRecordingEnum.Adapter.class)
 public enum AutoRecordingEnum {
    LOCAL("local"),
    
    CLOUD("cloud"),
    
    NONE("none");

    private String value;

    AutoRecordingEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AutoRecordingEnum fromValue(String value) {
      for (AutoRecordingEnum b : AutoRecordingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AutoRecordingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AutoRecordingEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AutoRecordingEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AutoRecordingEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_AUTO_RECORDING = "auto_recording";
  @SerializedName(SERIALIZED_NAME_AUTO_RECORDING)
  private AutoRecordingEnum autoRecording = AutoRecordingEnum.NONE;

  public static final String SERIALIZED_NAME_CLOSE_REGISTRATION = "close_registration";
  @SerializedName(SERIALIZED_NAME_CLOSE_REGISTRATION)
  private Boolean closeRegistration;

  public static final String SERIALIZED_NAME_CONTACT_EMAIL = "contact_email";
  @SerializedName(SERIALIZED_NAME_CONTACT_EMAIL)
  private String contactEmail;

  public static final String SERIALIZED_NAME_CONTACT_NAME = "contact_name";
  @SerializedName(SERIALIZED_NAME_CONTACT_NAME)
  private String contactName;

  public static final String SERIALIZED_NAME_EMAIL_LANGUAGE = "email_language";
  @SerializedName(SERIALIZED_NAME_EMAIL_LANGUAGE)
  private String emailLanguage;

  public static final String SERIALIZED_NAME_ENFORCE_LOGIN = "enforce_login";
  @SerializedName(SERIALIZED_NAME_ENFORCE_LOGIN)
  private Boolean enforceLogin;

  public static final String SERIALIZED_NAME_ENFORCE_LOGIN_DOMAINS = "enforce_login_domains";
  @SerializedName(SERIALIZED_NAME_ENFORCE_LOGIN_DOMAINS)
  private String enforceLoginDomains;

  public static final String SERIALIZED_NAME_FOLLOW_UP_ABSENTEES_EMAIL_NOTIFICATION = "follow_up_absentees_email_notification";
  @SerializedName(SERIALIZED_NAME_FOLLOW_UP_ABSENTEES_EMAIL_NOTIFICATION)
  private WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAbsenteesEmailNotification followUpAbsenteesEmailNotification;

  public static final String SERIALIZED_NAME_FOLLOW_UP_ATTENDEES_EMAIL_NOTIFICATION = "follow_up_attendees_email_notification";
  @SerializedName(SERIALIZED_NAME_FOLLOW_UP_ATTENDEES_EMAIL_NOTIFICATION)
  private WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAttendeesEmailNotification followUpAttendeesEmailNotification;

  public static final String SERIALIZED_NAME_GLOBAL_DIAL_IN_COUNTRIES = "global_dial_in_countries";
  @SerializedName(SERIALIZED_NAME_GLOBAL_DIAL_IN_COUNTRIES)
  private List<String> globalDialInCountries = null;

  public static final String SERIALIZED_NAME_HD_VIDEO = "hd_video";
  @SerializedName(SERIALIZED_NAME_HD_VIDEO)
  private Boolean hdVideo = false;

  public static final String SERIALIZED_NAME_HD_VIDEO_FOR_ATTENDEES = "hd_video_for_attendees";
  @SerializedName(SERIALIZED_NAME_HD_VIDEO_FOR_ATTENDEES)
  private Boolean hdVideoForAttendees = false;

  public static final String SERIALIZED_NAME_HOST_VIDEO = "host_video";
  @SerializedName(SERIALIZED_NAME_HOST_VIDEO)
  private Boolean hostVideo;

  public static final String SERIALIZED_NAME_LANGUAGE_INTERPRETATION = "language_interpretation";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_INTERPRETATION)
  private WebinarsUpdateScheduledWebinarRequestSettingsLanguageInterpretation languageInterpretation;

  public static final String SERIALIZED_NAME_SIGN_LANGUAGE_INTERPRETATION = "sign_language_interpretation";
  @SerializedName(SERIALIZED_NAME_SIGN_LANGUAGE_INTERPRETATION)
  private WebinarsUpdateScheduledWebinarRequestSettingsSignLanguageInterpretation signLanguageInterpretation;

  public static final String SERIALIZED_NAME_PANELIST_AUTHENTICATION = "panelist_authentication";
  @SerializedName(SERIALIZED_NAME_PANELIST_AUTHENTICATION)
  private Boolean panelistAuthentication;

  public static final String SERIALIZED_NAME_MEETING_AUTHENTICATION = "meeting_authentication";
  @SerializedName(SERIALIZED_NAME_MEETING_AUTHENTICATION)
  private Boolean meetingAuthentication;

  public static final String SERIALIZED_NAME_ADD_WATERMARK = "add_watermark";
  @SerializedName(SERIALIZED_NAME_ADD_WATERMARK)
  private Boolean addWatermark;

  public static final String SERIALIZED_NAME_ADD_AUDIO_WATERMARK = "add_audio_watermark";
  @SerializedName(SERIALIZED_NAME_ADD_AUDIO_WATERMARK)
  private Boolean addAudioWatermark;

  public static final String SERIALIZED_NAME_NOTIFY_REGISTRANTS = "notify_registrants";
  @SerializedName(SERIALIZED_NAME_NOTIFY_REGISTRANTS)
  private Boolean notifyRegistrants;

  public static final String SERIALIZED_NAME_ON_DEMAND = "on_demand";
  @SerializedName(SERIALIZED_NAME_ON_DEMAND)
  private Boolean onDemand = false;

  public static final String SERIALIZED_NAME_PANELISTS_INVITATION_EMAIL_NOTIFICATION = "panelists_invitation_email_notification";
  @SerializedName(SERIALIZED_NAME_PANELISTS_INVITATION_EMAIL_NOTIFICATION)
  private Boolean panelistsInvitationEmailNotification;

  public static final String SERIALIZED_NAME_PANELISTS_VIDEO = "panelists_video";
  @SerializedName(SERIALIZED_NAME_PANELISTS_VIDEO)
  private Boolean panelistsVideo;

  public static final String SERIALIZED_NAME_POST_WEBINAR_SURVEY = "post_webinar_survey";
  @SerializedName(SERIALIZED_NAME_POST_WEBINAR_SURVEY)
  private Boolean postWebinarSurvey;

  public static final String SERIALIZED_NAME_PRACTICE_SESSION = "practice_session";
  @SerializedName(SERIALIZED_NAME_PRACTICE_SESSION)
  private Boolean practiceSession = false;

  public static final String SERIALIZED_NAME_QUESTION_AND_ANSWER = "question_and_answer";
  @SerializedName(SERIALIZED_NAME_QUESTION_AND_ANSWER)
  private WebinarsUpdateScheduledWebinarRequestSettingsQuestionAndAnswer questionAndAnswer;

  public static final String SERIALIZED_NAME_REGISTRANTS_CONFIRMATION_EMAIL = "registrants_confirmation_email";
  @SerializedName(SERIALIZED_NAME_REGISTRANTS_CONFIRMATION_EMAIL)
  private Boolean registrantsConfirmationEmail;

  public static final String SERIALIZED_NAME_REGISTRANTS_EMAIL_NOTIFICATION = "registrants_email_notification";
  @SerializedName(SERIALIZED_NAME_REGISTRANTS_EMAIL_NOTIFICATION)
  private Boolean registrantsEmailNotification;

  public static final String SERIALIZED_NAME_REGISTRANTS_RESTRICT_NUMBER = "registrants_restrict_number";
  @SerializedName(SERIALIZED_NAME_REGISTRANTS_RESTRICT_NUMBER)
  private Integer registrantsRestrictNumber = 0;

  /**
   * Registration types. Only used for recurring webinars with a fixed time.    &#x60;1&#x60; - Attendees register once and can attend any of the webinar sessions.    &#x60;2&#x60; - Attendees need to register for each session in order to attend.    &#x60;3&#x60; - Attendees register once and can choose one or more sessions to attend.
   */
  @JsonAdapter(RegistrationTypeEnum.Adapter.class)
 public enum RegistrationTypeEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    RegistrationTypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RegistrationTypeEnum fromValue(Integer value) {
      for (RegistrationTypeEnum b : RegistrationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RegistrationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RegistrationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RegistrationTypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return RegistrationTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_REGISTRATION_TYPE = "registration_type";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_TYPE)
  private RegistrationTypeEnum registrationType = RegistrationTypeEnum.NUMBER_1;

  public static final String SERIALIZED_NAME_SEND1080P_VIDEO_TO_ATTENDEES = "send_1080p_video_to_attendees";
  @SerializedName(SERIALIZED_NAME_SEND1080P_VIDEO_TO_ATTENDEES)
  private Boolean send1080pVideoToAttendees = false;

  public static final String SERIALIZED_NAME_SHOW_SHARE_BUTTON = "show_share_button";
  @SerializedName(SERIALIZED_NAME_SHOW_SHARE_BUTTON)
  private Boolean showShareButton;

  public static final String SERIALIZED_NAME_SURVEY_URL = "survey_url";
  @SerializedName(SERIALIZED_NAME_SURVEY_URL)
  private String surveyUrl;

  public static final String SERIALIZED_NAME_ENABLE_SESSION_BRANDING = "enable_session_branding";
  @SerializedName(SERIALIZED_NAME_ENABLE_SESSION_BRANDING)
  private Boolean enableSessionBranding;

  public WebinarsUpdateScheduledWebinarRequestSettings() {
  }

  public WebinarsUpdateScheduledWebinarRequestSettings allowMultipleDevices(Boolean allowMultipleDevices) {
    
    
    
    
    this.allowMultipleDevices = allowMultipleDevices;
    return this;
  }

   /**
   * Allow attendees to join from multiple devices.
   * @return allowMultipleDevices
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Allow attendees to join from multiple devices.")

  public Boolean getAllowMultipleDevices() {
    return allowMultipleDevices;
  }


  public void setAllowMultipleDevices(Boolean allowMultipleDevices) {
    
    
    
    this.allowMultipleDevices = allowMultipleDevices;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings alternativeHosts(String alternativeHosts) {
    
    
    
    
    this.alternativeHosts = alternativeHosts;
    return this;
  }

   /**
   * Alternative host emails or IDs. Separate multiple values by commas.
   * @return alternativeHosts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jchill@example.com", value = "Alternative host emails or IDs. Separate multiple values by commas.")

  public String getAlternativeHosts() {
    return alternativeHosts;
  }


  public void setAlternativeHosts(String alternativeHosts) {
    
    
    
    this.alternativeHosts = alternativeHosts;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings alternativeHostUpdatePolls(Boolean alternativeHostUpdatePolls) {
    
    
    
    
    this.alternativeHostUpdatePolls = alternativeHostUpdatePolls;
    return this;
  }

   /**
   * Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher.
   * @return alternativeHostUpdatePolls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher.")

  public Boolean getAlternativeHostUpdatePolls() {
    return alternativeHostUpdatePolls;
  }


  public void setAlternativeHostUpdatePolls(Boolean alternativeHostUpdatePolls) {
    
    
    
    this.alternativeHostUpdatePolls = alternativeHostUpdatePolls;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings approvalType(ApprovalTypeEnum approvalType) {
    
    
    
    
    this.approvalType = approvalType;
    return this;
  }

   /**
   * &#x60;0&#x60; - Automatically approve.    &#x60;1&#x60; - Manually approve.    &#x60;2&#x60; - No registration required.
   * @return approvalType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "_0", value = "`0` - Automatically approve.    `1` - Manually approve.    `2` - No registration required.")

  public ApprovalTypeEnum getApprovalType() {
    return approvalType;
  }


  public void setApprovalType(ApprovalTypeEnum approvalType) {
    
    
    
    this.approvalType = approvalType;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings attendeesAndPanelistsReminderEmailNotification(WebinarsUpdateScheduledWebinarRequestSettingsAttendeesAndPanelistsReminderEmailNotification attendeesAndPanelistsReminderEmailNotification) {
    
    
    
    
    this.attendeesAndPanelistsReminderEmailNotification = attendeesAndPanelistsReminderEmailNotification;
    return this;
  }

   /**
   * Get attendeesAndPanelistsReminderEmailNotification
   * @return attendeesAndPanelistsReminderEmailNotification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WebinarsUpdateScheduledWebinarRequestSettingsAttendeesAndPanelistsReminderEmailNotification getAttendeesAndPanelistsReminderEmailNotification() {
    return attendeesAndPanelistsReminderEmailNotification;
  }


  public void setAttendeesAndPanelistsReminderEmailNotification(WebinarsUpdateScheduledWebinarRequestSettingsAttendeesAndPanelistsReminderEmailNotification attendeesAndPanelistsReminderEmailNotification) {
    
    
    
    this.attendeesAndPanelistsReminderEmailNotification = attendeesAndPanelistsReminderEmailNotification;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings audio(AudioEnum audio) {
    
    
    
    
    this.audio = audio;
    return this;
  }

   /**
   * Determine how participants can join the audio portion of the webinar.
   * @return audio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "TELEPHONY", value = "Determine how participants can join the audio portion of the webinar.")

  public AudioEnum getAudio() {
    return audio;
  }


  public void setAudio(AudioEnum audio) {
    
    
    
    this.audio = audio;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings audioConferenceInfo(String audioConferenceInfo) {
    
    
    
    
    this.audioConferenceInfo = audioConferenceInfo;
    return this;
  }

   /**
   * Third party audio conference info.
   * @return audioConferenceInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "test", value = "Third party audio conference info.")

  public String getAudioConferenceInfo() {
    return audioConferenceInfo;
  }


  public void setAudioConferenceInfo(String audioConferenceInfo) {
    
    
    
    this.audioConferenceInfo = audioConferenceInfo;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings authenticationDomains(String authenticationDomains) {
    
    
    
    
    this.authenticationDomains = authenticationDomains;
    return this;
  }

   /**
   * If user has configured [**Sign Into Zoom with Specified Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
   * @return authenticationDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "example.com", value = "If user has configured [**Sign Into Zoom with Specified Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.")

  public String getAuthenticationDomains() {
    return authenticationDomains;
  }


  public void setAuthenticationDomains(String authenticationDomains) {
    
    
    
    this.authenticationDomains = authenticationDomains;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings authenticationName(String authenticationName) {
    
    
    
    
    this.authenticationName = authenticationName;
    return this;
  }

   /**
   * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
   * @return authenticationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sign in to Zoom", value = "Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).")

  public String getAuthenticationName() {
    return authenticationName;
  }


  public void setAuthenticationName(String authenticationName) {
    
    
    
    this.authenticationName = authenticationName;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings authenticationOption(String authenticationOption) {
    
    
    
    
    this.authenticationOption = authenticationOption;
    return this;
  }

   /**
   * Webinar authentication option ID.
   * @return authenticationOption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "signIn_D8cJuqWVQ623CI4Q8yQK0Q", value = "Webinar authentication option ID.")

  public String getAuthenticationOption() {
    return authenticationOption;
  }


  public void setAuthenticationOption(String authenticationOption) {
    
    
    
    this.authenticationOption = authenticationOption;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings autoRecording(AutoRecordingEnum autoRecording) {
    
    
    
    
    this.autoRecording = autoRecording;
    return this;
  }

   /**
   * Automatic recording.   &#x60;local&#x60; - Record on local.    &#x60;cloud&#x60; -  Record on cloud.    &#x60;none&#x60; - Disabled.
   * @return autoRecording
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CLOUD", value = "Automatic recording.   `local` - Record on local.    `cloud` -  Record on cloud.    `none` - Disabled.")

  public AutoRecordingEnum getAutoRecording() {
    return autoRecording;
  }


  public void setAutoRecording(AutoRecordingEnum autoRecording) {
    
    
    
    this.autoRecording = autoRecording;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings closeRegistration(Boolean closeRegistration) {
    
    
    
    
    this.closeRegistration = closeRegistration;
    return this;
  }

   /**
   * Close registration after event date.
   * @return closeRegistration
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Close registration after event date.")

  public Boolean getCloseRegistration() {
    return closeRegistration;
  }


  public void setCloseRegistration(Boolean closeRegistration) {
    
    
    
    this.closeRegistration = closeRegistration;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings contactEmail(String contactEmail) {
    
    
    
    
    this.contactEmail = contactEmail;
    return this;
  }

   /**
   * Contact email for registration
   * @return contactEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jchill@example.com", value = "Contact email for registration")

  public String getContactEmail() {
    return contactEmail;
  }


  public void setContactEmail(String contactEmail) {
    
    
    
    this.contactEmail = contactEmail;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings contactName(String contactName) {
    
    
    
    
    this.contactName = contactName;
    return this;
  }

   /**
   * Contact name for registration
   * @return contactName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Jill Chill", value = "Contact name for registration")

  public String getContactName() {
    return contactName;
  }


  public void setContactName(String contactName) {
    
    
    
    this.contactName = contactName;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings emailLanguage(String emailLanguage) {
    
    
    
    
    this.emailLanguage = emailLanguage;
    return this;
  }

   /**
   * Set the email language to one of the following. &#x60;en-US&#x60;,&#x60;de-DE&#x60;,&#x60;es-ES&#x60;,&#x60;fr-FR&#x60;,&#x60;jp-JP&#x60;,&#x60;pt-PT&#x60;,&#x60;ru-RU&#x60;,&#x60;zh-CN&#x60;, &#x60;zh-TW&#x60;, &#x60;ko-KO&#x60;, &#x60;it-IT&#x60;, &#x60;vi-VN&#x60;.
   * @return emailLanguage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en-US", value = "Set the email language to one of the following. `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.")

  public String getEmailLanguage() {
    return emailLanguage;
  }


  public void setEmailLanguage(String emailLanguage) {
    
    
    
    this.emailLanguage = emailLanguage;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings enforceLogin(Boolean enforceLogin) {
    
    
    
    
    this.enforceLogin = enforceLogin;
    return this;
  }

   /**
   * Only signed in users can join this meeting.  **This field is deprecated and will not be supported in the future.**    As an alternative, use the &#x60;&#x60;meeting_authentication&#x60;, &#x60;authentication_option&#x60;, and &#x60;authentication_domains&#x60; fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.
   * @return enforceLogin
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Only signed in users can join this meeting.  **This field is deprecated and will not be supported in the future.**    As an alternative, use the ``meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.")

  public Boolean getEnforceLogin() {
    return enforceLogin;
  }


  public void setEnforceLogin(Boolean enforceLogin) {
    
    
    
    this.enforceLogin = enforceLogin;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings enforceLoginDomains(String enforceLoginDomains) {
    
    
    
    
    this.enforceLoginDomains = enforceLoginDomains;
    return this;
  }

   /**
   * Only signed in users with specified domains can join meetings.  **This field is deprecated and will not be supported in the future.**   As an alternative, use the &#x60;meeting_authentication&#x60;, &#x60;authentication_option&#x60;, and &#x60;authentication_domains&#x60; fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.
   * @return enforceLoginDomains
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "example.com", value = "Only signed in users with specified domains can join meetings.  **This field is deprecated and will not be supported in the future.**   As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.")

  public String getEnforceLoginDomains() {
    return enforceLoginDomains;
  }


  public void setEnforceLoginDomains(String enforceLoginDomains) {
    
    
    
    this.enforceLoginDomains = enforceLoginDomains;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings followUpAbsenteesEmailNotification(WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAbsenteesEmailNotification followUpAbsenteesEmailNotification) {
    
    
    
    
    this.followUpAbsenteesEmailNotification = followUpAbsenteesEmailNotification;
    return this;
  }

   /**
   * Get followUpAbsenteesEmailNotification
   * @return followUpAbsenteesEmailNotification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAbsenteesEmailNotification getFollowUpAbsenteesEmailNotification() {
    return followUpAbsenteesEmailNotification;
  }


  public void setFollowUpAbsenteesEmailNotification(WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAbsenteesEmailNotification followUpAbsenteesEmailNotification) {
    
    
    
    this.followUpAbsenteesEmailNotification = followUpAbsenteesEmailNotification;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings followUpAttendeesEmailNotification(WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAttendeesEmailNotification followUpAttendeesEmailNotification) {
    
    
    
    
    this.followUpAttendeesEmailNotification = followUpAttendeesEmailNotification;
    return this;
  }

   /**
   * Get followUpAttendeesEmailNotification
   * @return followUpAttendeesEmailNotification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAttendeesEmailNotification getFollowUpAttendeesEmailNotification() {
    return followUpAttendeesEmailNotification;
  }


  public void setFollowUpAttendeesEmailNotification(WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAttendeesEmailNotification followUpAttendeesEmailNotification) {
    
    
    
    this.followUpAttendeesEmailNotification = followUpAttendeesEmailNotification;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings globalDialInCountries(List<String> globalDialInCountries) {
    
    
    
    
    this.globalDialInCountries = globalDialInCountries;
    return this;
  }

  public WebinarsUpdateScheduledWebinarRequestSettings addGlobalDialInCountriesItem(String globalDialInCountriesItem) {
    if (this.globalDialInCountries == null) {
      this.globalDialInCountries = new ArrayList<>();
    }
    this.globalDialInCountries.add(globalDialInCountriesItem);
    return this;
  }

   /**
   * List of global dial-in countries
   * @return globalDialInCountries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of global dial-in countries")

  public List<String> getGlobalDialInCountries() {
    return globalDialInCountries;
  }


  public void setGlobalDialInCountries(List<String> globalDialInCountries) {
    
    
    
    this.globalDialInCountries = globalDialInCountries;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings hdVideo(Boolean hdVideo) {
    
    
    
    
    this.hdVideo = hdVideo;
    return this;
  }

   /**
   * Default to HD video.
   * @return hdVideo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Default to HD video.")

  public Boolean getHdVideo() {
    return hdVideo;
  }


  public void setHdVideo(Boolean hdVideo) {
    
    
    
    this.hdVideo = hdVideo;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings hdVideoForAttendees(Boolean hdVideoForAttendees) {
    
    
    
    
    this.hdVideoForAttendees = hdVideoForAttendees;
    return this;
  }

   /**
   * Whether HD video for attendees is enabled.
   * @return hdVideoForAttendees
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Whether HD video for attendees is enabled.")

  public Boolean getHdVideoForAttendees() {
    return hdVideoForAttendees;
  }


  public void setHdVideoForAttendees(Boolean hdVideoForAttendees) {
    
    
    
    this.hdVideoForAttendees = hdVideoForAttendees;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings hostVideo(Boolean hostVideo) {
    
    
    
    
    this.hostVideo = hostVideo;
    return this;
  }

   /**
   * Start video when host joins the webinar.
   * @return hostVideo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Start video when host joins the webinar.")

  public Boolean getHostVideo() {
    return hostVideo;
  }


  public void setHostVideo(Boolean hostVideo) {
    
    
    
    this.hostVideo = hostVideo;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings languageInterpretation(WebinarsUpdateScheduledWebinarRequestSettingsLanguageInterpretation languageInterpretation) {
    
    
    
    
    this.languageInterpretation = languageInterpretation;
    return this;
  }

   /**
   * Get languageInterpretation
   * @return languageInterpretation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WebinarsUpdateScheduledWebinarRequestSettingsLanguageInterpretation getLanguageInterpretation() {
    return languageInterpretation;
  }


  public void setLanguageInterpretation(WebinarsUpdateScheduledWebinarRequestSettingsLanguageInterpretation languageInterpretation) {
    
    
    
    this.languageInterpretation = languageInterpretation;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings signLanguageInterpretation(WebinarsUpdateScheduledWebinarRequestSettingsSignLanguageInterpretation signLanguageInterpretation) {
    
    
    
    
    this.signLanguageInterpretation = signLanguageInterpretation;
    return this;
  }

   /**
   * Get signLanguageInterpretation
   * @return signLanguageInterpretation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WebinarsUpdateScheduledWebinarRequestSettingsSignLanguageInterpretation getSignLanguageInterpretation() {
    return signLanguageInterpretation;
  }


  public void setSignLanguageInterpretation(WebinarsUpdateScheduledWebinarRequestSettingsSignLanguageInterpretation signLanguageInterpretation) {
    
    
    
    this.signLanguageInterpretation = signLanguageInterpretation;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings panelistAuthentication(Boolean panelistAuthentication) {
    
    
    
    
    this.panelistAuthentication = panelistAuthentication;
    return this;
  }

   /**
   * Require panelists to authenticate to join.
   * @return panelistAuthentication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Require panelists to authenticate to join.")

  public Boolean getPanelistAuthentication() {
    return panelistAuthentication;
  }


  public void setPanelistAuthentication(Boolean panelistAuthentication) {
    
    
    
    this.panelistAuthentication = panelistAuthentication;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings meetingAuthentication(Boolean meetingAuthentication) {
    
    
    
    
    this.meetingAuthentication = meetingAuthentication;
    return this;
  }

   /**
   * Only authenticated users can join the webinar.
   * @return meetingAuthentication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Only authenticated users can join the webinar.")

  public Boolean getMeetingAuthentication() {
    return meetingAuthentication;
  }


  public void setMeetingAuthentication(Boolean meetingAuthentication) {
    
    
    
    this.meetingAuthentication = meetingAuthentication;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings addWatermark(Boolean addWatermark) {
    
    
    
    
    this.addWatermark = addWatermark;
    return this;
  }

   /**
   * Add watermark that identifies the viewing participant.
   * @return addWatermark
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Add watermark that identifies the viewing participant.")

  public Boolean getAddWatermark() {
    return addWatermark;
  }


  public void setAddWatermark(Boolean addWatermark) {
    
    
    
    this.addWatermark = addWatermark;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings addAudioWatermark(Boolean addAudioWatermark) {
    
    
    
    
    this.addAudioWatermark = addAudioWatermark;
    return this;
  }

   /**
   * Add audio watermark that identifies the participants.
   * @return addAudioWatermark
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Add audio watermark that identifies the participants.")

  public Boolean getAddAudioWatermark() {
    return addAudioWatermark;
  }


  public void setAddAudioWatermark(Boolean addAudioWatermark) {
    
    
    
    this.addAudioWatermark = addAudioWatermark;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings notifyRegistrants(Boolean notifyRegistrants) {
    
    
    
    
    this.notifyRegistrants = notifyRegistrants;
    return this;
  }

   /**
   * Send notification email to registrants when the host updates a webinar.
   * @return notifyRegistrants
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Send notification email to registrants when the host updates a webinar.")

  public Boolean getNotifyRegistrants() {
    return notifyRegistrants;
  }


  public void setNotifyRegistrants(Boolean notifyRegistrants) {
    
    
    
    this.notifyRegistrants = notifyRegistrants;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings onDemand(Boolean onDemand) {
    
    
    
    
    this.onDemand = onDemand;
    return this;
  }

   /**
   * Make the webinar on-demand.
   * @return onDemand
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Make the webinar on-demand.")

  public Boolean getOnDemand() {
    return onDemand;
  }


  public void setOnDemand(Boolean onDemand) {
    
    
    
    this.onDemand = onDemand;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings panelistsInvitationEmailNotification(Boolean panelistsInvitationEmailNotification) {
    
    
    
    
    this.panelistsInvitationEmailNotification = panelistsInvitationEmailNotification;
    return this;
  }

   /**
   * Send invitation email to panelists. If &#x60;false&#x60;, do not send invitation email to panelists.
   * @return panelistsInvitationEmailNotification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Send invitation email to panelists. If `false`, do not send invitation email to panelists.")

  public Boolean getPanelistsInvitationEmailNotification() {
    return panelistsInvitationEmailNotification;
  }


  public void setPanelistsInvitationEmailNotification(Boolean panelistsInvitationEmailNotification) {
    
    
    
    this.panelistsInvitationEmailNotification = panelistsInvitationEmailNotification;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings panelistsVideo(Boolean panelistsVideo) {
    
    
    
    
    this.panelistsVideo = panelistsVideo;
    return this;
  }

   /**
   * Start video when panelists join the webinar.
   * @return panelistsVideo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Start video when panelists join the webinar.")

  public Boolean getPanelistsVideo() {
    return panelistsVideo;
  }


  public void setPanelistsVideo(Boolean panelistsVideo) {
    
    
    
    this.panelistsVideo = panelistsVideo;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings postWebinarSurvey(Boolean postWebinarSurvey) {
    
    
    
    
    this.postWebinarSurvey = postWebinarSurvey;
    return this;
  }

   /**
   * Zoom will open a survey page in attendees&#39; browsers after leaving the webinar.
   * @return postWebinarSurvey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Zoom will open a survey page in attendees' browsers after leaving the webinar.")

  public Boolean getPostWebinarSurvey() {
    return postWebinarSurvey;
  }


  public void setPostWebinarSurvey(Boolean postWebinarSurvey) {
    
    
    
    this.postWebinarSurvey = postWebinarSurvey;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings practiceSession(Boolean practiceSession) {
    
    
    
    
    this.practiceSession = practiceSession;
    return this;
  }

   /**
   * Enable practice session.
   * @return practiceSession
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Enable practice session.")

  public Boolean getPracticeSession() {
    return practiceSession;
  }


  public void setPracticeSession(Boolean practiceSession) {
    
    
    
    this.practiceSession = practiceSession;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings questionAndAnswer(WebinarsUpdateScheduledWebinarRequestSettingsQuestionAndAnswer questionAndAnswer) {
    
    
    
    
    this.questionAndAnswer = questionAndAnswer;
    return this;
  }

   /**
   * Get questionAndAnswer
   * @return questionAndAnswer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WebinarsUpdateScheduledWebinarRequestSettingsQuestionAndAnswer getQuestionAndAnswer() {
    return questionAndAnswer;
  }


  public void setQuestionAndAnswer(WebinarsUpdateScheduledWebinarRequestSettingsQuestionAndAnswer questionAndAnswer) {
    
    
    
    this.questionAndAnswer = questionAndAnswer;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings registrantsConfirmationEmail(Boolean registrantsConfirmationEmail) {
    
    
    
    
    this.registrantsConfirmationEmail = registrantsConfirmationEmail;
    return this;
  }

   /**
   * Send confirmation email to registrants
   * @return registrantsConfirmationEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Send confirmation email to registrants")

  public Boolean getRegistrantsConfirmationEmail() {
    return registrantsConfirmationEmail;
  }


  public void setRegistrantsConfirmationEmail(Boolean registrantsConfirmationEmail) {
    
    
    
    this.registrantsConfirmationEmail = registrantsConfirmationEmail;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings registrantsEmailNotification(Boolean registrantsEmailNotification) {
    
    
    
    
    this.registrantsEmailNotification = registrantsEmailNotification;
    return this;
  }

   /**
   * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the &#x60;registrants_confirmation_email&#x60; field.
   * @return registrantsEmailNotification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.")

  public Boolean getRegistrantsEmailNotification() {
    return registrantsEmailNotification;
  }


  public void setRegistrantsEmailNotification(Boolean registrantsEmailNotification) {
    
    
    
    this.registrantsEmailNotification = registrantsEmailNotification;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings registrantsRestrictNumber(Integer registrantsRestrictNumber) {
    if (registrantsRestrictNumber != null && registrantsRestrictNumber < 0) {
      throw new IllegalArgumentException("Invalid value for registrantsRestrictNumber. Must be greater than or equal to 0.");
    }
    if (registrantsRestrictNumber != null && registrantsRestrictNumber > 20000) {
      throw new IllegalArgumentException("Invalid value for registrantsRestrictNumber. Must be less than or equal to 20000.");
    }
    
    
    this.registrantsRestrictNumber = registrantsRestrictNumber;
    return this;
  }

   /**
   * Restrict number of registrants for a webinar. By default, it is set to &#x60;0&#x60;. A &#x60;0&#x60; value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
   * minimum: 0
   * maximum: 20000
   * @return registrantsRestrictNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.")

  public Integer getRegistrantsRestrictNumber() {
    return registrantsRestrictNumber;
  }


  public void setRegistrantsRestrictNumber(Integer registrantsRestrictNumber) {
    if (registrantsRestrictNumber != null && registrantsRestrictNumber < 0) {
      throw new IllegalArgumentException("Invalid value for registrantsRestrictNumber. Must be greater than or equal to 0.");
    }
    if (registrantsRestrictNumber != null && registrantsRestrictNumber > 20000) {
      throw new IllegalArgumentException("Invalid value for registrantsRestrictNumber. Must be less than or equal to 20000.");
    }
    
    this.registrantsRestrictNumber = registrantsRestrictNumber;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings registrationType(RegistrationTypeEnum registrationType) {
    
    
    
    
    this.registrationType = registrationType;
    return this;
  }

   /**
   * Registration types. Only used for recurring webinars with a fixed time.    &#x60;1&#x60; - Attendees register once and can attend any of the webinar sessions.    &#x60;2&#x60; - Attendees need to register for each session in order to attend.    &#x60;3&#x60; - Attendees register once and can choose one or more sessions to attend.
   * @return registrationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "_1", value = "Registration types. Only used for recurring webinars with a fixed time.    `1` - Attendees register once and can attend any of the webinar sessions.    `2` - Attendees need to register for each session in order to attend.    `3` - Attendees register once and can choose one or more sessions to attend.")

  public RegistrationTypeEnum getRegistrationType() {
    return registrationType;
  }


  public void setRegistrationType(RegistrationTypeEnum registrationType) {
    
    
    
    this.registrationType = registrationType;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings send1080pVideoToAttendees(Boolean send1080pVideoToAttendees) {
    
    
    
    
    this.send1080pVideoToAttendees = send1080pVideoToAttendees;
    return this;
  }

   /**
   * Always send 1080p video to attendees.
   * @return send1080pVideoToAttendees
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Always send 1080p video to attendees.")

  public Boolean getSend1080pVideoToAttendees() {
    return send1080pVideoToAttendees;
  }


  public void setSend1080pVideoToAttendees(Boolean send1080pVideoToAttendees) {
    
    
    
    this.send1080pVideoToAttendees = send1080pVideoToAttendees;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings showShareButton(Boolean showShareButton) {
    
    
    
    
    this.showShareButton = showShareButton;
    return this;
  }

   /**
   * Show social share buttons on the registration page.
   * @return showShareButton
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Show social share buttons on the registration page.")

  public Boolean getShowShareButton() {
    return showShareButton;
  }


  public void setShowShareButton(Boolean showShareButton) {
    
    
    
    this.showShareButton = showShareButton;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings surveyUrl(String surveyUrl) {
    
    
    
    
    this.surveyUrl = surveyUrl;
    return this;
  }

   /**
   * Survey url for post webinar survey
   * @return surveyUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://example.com", value = "Survey url for post webinar survey")

  public String getSurveyUrl() {
    return surveyUrl;
  }


  public void setSurveyUrl(String surveyUrl) {
    
    
    
    this.surveyUrl = surveyUrl;
  }


  public WebinarsUpdateScheduledWebinarRequestSettings enableSessionBranding(Boolean enableSessionBranding) {
    
    
    
    
    this.enableSessionBranding = enableSessionBranding;
    return this;
  }

   /**
   * Whether the **Webinar Session Branding** setting is enabled. This setting lets hosts visually customize a webinar by setting a session background. This also lets hosts use [Webinar Session Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) to set the virtual background for and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers.
   * @return enableSessionBranding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether the **Webinar Session Branding** setting is enabled. This setting lets hosts visually customize a webinar by setting a session background. This also lets hosts use [Webinar Session Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) to set the virtual background for and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers.")

  public Boolean getEnableSessionBranding() {
    return enableSessionBranding;
  }


  public void setEnableSessionBranding(Boolean enableSessionBranding) {
    
    
    
    this.enableSessionBranding = enableSessionBranding;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the WebinarsUpdateScheduledWebinarRequestSettings instance itself
   */
  public WebinarsUpdateScheduledWebinarRequestSettings putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebinarsUpdateScheduledWebinarRequestSettings webinarsUpdateScheduledWebinarRequestSettings = (WebinarsUpdateScheduledWebinarRequestSettings) o;
    return Objects.equals(this.allowMultipleDevices, webinarsUpdateScheduledWebinarRequestSettings.allowMultipleDevices) &&
        Objects.equals(this.alternativeHosts, webinarsUpdateScheduledWebinarRequestSettings.alternativeHosts) &&
        Objects.equals(this.alternativeHostUpdatePolls, webinarsUpdateScheduledWebinarRequestSettings.alternativeHostUpdatePolls) &&
        Objects.equals(this.approvalType, webinarsUpdateScheduledWebinarRequestSettings.approvalType) &&
        Objects.equals(this.attendeesAndPanelistsReminderEmailNotification, webinarsUpdateScheduledWebinarRequestSettings.attendeesAndPanelistsReminderEmailNotification) &&
        Objects.equals(this.audio, webinarsUpdateScheduledWebinarRequestSettings.audio) &&
        Objects.equals(this.audioConferenceInfo, webinarsUpdateScheduledWebinarRequestSettings.audioConferenceInfo) &&
        Objects.equals(this.authenticationDomains, webinarsUpdateScheduledWebinarRequestSettings.authenticationDomains) &&
        Objects.equals(this.authenticationName, webinarsUpdateScheduledWebinarRequestSettings.authenticationName) &&
        Objects.equals(this.authenticationOption, webinarsUpdateScheduledWebinarRequestSettings.authenticationOption) &&
        Objects.equals(this.autoRecording, webinarsUpdateScheduledWebinarRequestSettings.autoRecording) &&
        Objects.equals(this.closeRegistration, webinarsUpdateScheduledWebinarRequestSettings.closeRegistration) &&
        Objects.equals(this.contactEmail, webinarsUpdateScheduledWebinarRequestSettings.contactEmail) &&
        Objects.equals(this.contactName, webinarsUpdateScheduledWebinarRequestSettings.contactName) &&
        Objects.equals(this.emailLanguage, webinarsUpdateScheduledWebinarRequestSettings.emailLanguage) &&
        Objects.equals(this.enforceLogin, webinarsUpdateScheduledWebinarRequestSettings.enforceLogin) &&
        Objects.equals(this.enforceLoginDomains, webinarsUpdateScheduledWebinarRequestSettings.enforceLoginDomains) &&
        Objects.equals(this.followUpAbsenteesEmailNotification, webinarsUpdateScheduledWebinarRequestSettings.followUpAbsenteesEmailNotification) &&
        Objects.equals(this.followUpAttendeesEmailNotification, webinarsUpdateScheduledWebinarRequestSettings.followUpAttendeesEmailNotification) &&
        Objects.equals(this.globalDialInCountries, webinarsUpdateScheduledWebinarRequestSettings.globalDialInCountries) &&
        Objects.equals(this.hdVideo, webinarsUpdateScheduledWebinarRequestSettings.hdVideo) &&
        Objects.equals(this.hdVideoForAttendees, webinarsUpdateScheduledWebinarRequestSettings.hdVideoForAttendees) &&
        Objects.equals(this.hostVideo, webinarsUpdateScheduledWebinarRequestSettings.hostVideo) &&
        Objects.equals(this.languageInterpretation, webinarsUpdateScheduledWebinarRequestSettings.languageInterpretation) &&
        Objects.equals(this.signLanguageInterpretation, webinarsUpdateScheduledWebinarRequestSettings.signLanguageInterpretation) &&
        Objects.equals(this.panelistAuthentication, webinarsUpdateScheduledWebinarRequestSettings.panelistAuthentication) &&
        Objects.equals(this.meetingAuthentication, webinarsUpdateScheduledWebinarRequestSettings.meetingAuthentication) &&
        Objects.equals(this.addWatermark, webinarsUpdateScheduledWebinarRequestSettings.addWatermark) &&
        Objects.equals(this.addAudioWatermark, webinarsUpdateScheduledWebinarRequestSettings.addAudioWatermark) &&
        Objects.equals(this.notifyRegistrants, webinarsUpdateScheduledWebinarRequestSettings.notifyRegistrants) &&
        Objects.equals(this.onDemand, webinarsUpdateScheduledWebinarRequestSettings.onDemand) &&
        Objects.equals(this.panelistsInvitationEmailNotification, webinarsUpdateScheduledWebinarRequestSettings.panelistsInvitationEmailNotification) &&
        Objects.equals(this.panelistsVideo, webinarsUpdateScheduledWebinarRequestSettings.panelistsVideo) &&
        Objects.equals(this.postWebinarSurvey, webinarsUpdateScheduledWebinarRequestSettings.postWebinarSurvey) &&
        Objects.equals(this.practiceSession, webinarsUpdateScheduledWebinarRequestSettings.practiceSession) &&
        Objects.equals(this.questionAndAnswer, webinarsUpdateScheduledWebinarRequestSettings.questionAndAnswer) &&
        Objects.equals(this.registrantsConfirmationEmail, webinarsUpdateScheduledWebinarRequestSettings.registrantsConfirmationEmail) &&
        Objects.equals(this.registrantsEmailNotification, webinarsUpdateScheduledWebinarRequestSettings.registrantsEmailNotification) &&
        Objects.equals(this.registrantsRestrictNumber, webinarsUpdateScheduledWebinarRequestSettings.registrantsRestrictNumber) &&
        Objects.equals(this.registrationType, webinarsUpdateScheduledWebinarRequestSettings.registrationType) &&
        Objects.equals(this.send1080pVideoToAttendees, webinarsUpdateScheduledWebinarRequestSettings.send1080pVideoToAttendees) &&
        Objects.equals(this.showShareButton, webinarsUpdateScheduledWebinarRequestSettings.showShareButton) &&
        Objects.equals(this.surveyUrl, webinarsUpdateScheduledWebinarRequestSettings.surveyUrl) &&
        Objects.equals(this.enableSessionBranding, webinarsUpdateScheduledWebinarRequestSettings.enableSessionBranding)&&
        Objects.equals(this.additionalProperties, webinarsUpdateScheduledWebinarRequestSettings.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowMultipleDevices, alternativeHosts, alternativeHostUpdatePolls, approvalType, attendeesAndPanelistsReminderEmailNotification, audio, audioConferenceInfo, authenticationDomains, authenticationName, authenticationOption, autoRecording, closeRegistration, contactEmail, contactName, emailLanguage, enforceLogin, enforceLoginDomains, followUpAbsenteesEmailNotification, followUpAttendeesEmailNotification, globalDialInCountries, hdVideo, hdVideoForAttendees, hostVideo, languageInterpretation, signLanguageInterpretation, panelistAuthentication, meetingAuthentication, addWatermark, addAudioWatermark, notifyRegistrants, onDemand, panelistsInvitationEmailNotification, panelistsVideo, postWebinarSurvey, practiceSession, questionAndAnswer, registrantsConfirmationEmail, registrantsEmailNotification, registrantsRestrictNumber, registrationType, send1080pVideoToAttendees, showShareButton, surveyUrl, enableSessionBranding, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebinarsUpdateScheduledWebinarRequestSettings {\n");
    sb.append("    allowMultipleDevices: ").append(toIndentedString(allowMultipleDevices)).append("\n");
    sb.append("    alternativeHosts: ").append(toIndentedString(alternativeHosts)).append("\n");
    sb.append("    alternativeHostUpdatePolls: ").append(toIndentedString(alternativeHostUpdatePolls)).append("\n");
    sb.append("    approvalType: ").append(toIndentedString(approvalType)).append("\n");
    sb.append("    attendeesAndPanelistsReminderEmailNotification: ").append(toIndentedString(attendeesAndPanelistsReminderEmailNotification)).append("\n");
    sb.append("    audio: ").append(toIndentedString(audio)).append("\n");
    sb.append("    audioConferenceInfo: ").append(toIndentedString(audioConferenceInfo)).append("\n");
    sb.append("    authenticationDomains: ").append(toIndentedString(authenticationDomains)).append("\n");
    sb.append("    authenticationName: ").append(toIndentedString(authenticationName)).append("\n");
    sb.append("    authenticationOption: ").append(toIndentedString(authenticationOption)).append("\n");
    sb.append("    autoRecording: ").append(toIndentedString(autoRecording)).append("\n");
    sb.append("    closeRegistration: ").append(toIndentedString(closeRegistration)).append("\n");
    sb.append("    contactEmail: ").append(toIndentedString(contactEmail)).append("\n");
    sb.append("    contactName: ").append(toIndentedString(contactName)).append("\n");
    sb.append("    emailLanguage: ").append(toIndentedString(emailLanguage)).append("\n");
    sb.append("    enforceLogin: ").append(toIndentedString(enforceLogin)).append("\n");
    sb.append("    enforceLoginDomains: ").append(toIndentedString(enforceLoginDomains)).append("\n");
    sb.append("    followUpAbsenteesEmailNotification: ").append(toIndentedString(followUpAbsenteesEmailNotification)).append("\n");
    sb.append("    followUpAttendeesEmailNotification: ").append(toIndentedString(followUpAttendeesEmailNotification)).append("\n");
    sb.append("    globalDialInCountries: ").append(toIndentedString(globalDialInCountries)).append("\n");
    sb.append("    hdVideo: ").append(toIndentedString(hdVideo)).append("\n");
    sb.append("    hdVideoForAttendees: ").append(toIndentedString(hdVideoForAttendees)).append("\n");
    sb.append("    hostVideo: ").append(toIndentedString(hostVideo)).append("\n");
    sb.append("    languageInterpretation: ").append(toIndentedString(languageInterpretation)).append("\n");
    sb.append("    signLanguageInterpretation: ").append(toIndentedString(signLanguageInterpretation)).append("\n");
    sb.append("    panelistAuthentication: ").append(toIndentedString(panelistAuthentication)).append("\n");
    sb.append("    meetingAuthentication: ").append(toIndentedString(meetingAuthentication)).append("\n");
    sb.append("    addWatermark: ").append(toIndentedString(addWatermark)).append("\n");
    sb.append("    addAudioWatermark: ").append(toIndentedString(addAudioWatermark)).append("\n");
    sb.append("    notifyRegistrants: ").append(toIndentedString(notifyRegistrants)).append("\n");
    sb.append("    onDemand: ").append(toIndentedString(onDemand)).append("\n");
    sb.append("    panelistsInvitationEmailNotification: ").append(toIndentedString(panelistsInvitationEmailNotification)).append("\n");
    sb.append("    panelistsVideo: ").append(toIndentedString(panelistsVideo)).append("\n");
    sb.append("    postWebinarSurvey: ").append(toIndentedString(postWebinarSurvey)).append("\n");
    sb.append("    practiceSession: ").append(toIndentedString(practiceSession)).append("\n");
    sb.append("    questionAndAnswer: ").append(toIndentedString(questionAndAnswer)).append("\n");
    sb.append("    registrantsConfirmationEmail: ").append(toIndentedString(registrantsConfirmationEmail)).append("\n");
    sb.append("    registrantsEmailNotification: ").append(toIndentedString(registrantsEmailNotification)).append("\n");
    sb.append("    registrantsRestrictNumber: ").append(toIndentedString(registrantsRestrictNumber)).append("\n");
    sb.append("    registrationType: ").append(toIndentedString(registrationType)).append("\n");
    sb.append("    send1080pVideoToAttendees: ").append(toIndentedString(send1080pVideoToAttendees)).append("\n");
    sb.append("    showShareButton: ").append(toIndentedString(showShareButton)).append("\n");
    sb.append("    surveyUrl: ").append(toIndentedString(surveyUrl)).append("\n");
    sb.append("    enableSessionBranding: ").append(toIndentedString(enableSessionBranding)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_multiple_devices");
    openapiFields.add("alternative_hosts");
    openapiFields.add("alternative_host_update_polls");
    openapiFields.add("approval_type");
    openapiFields.add("attendees_and_panelists_reminder_email_notification");
    openapiFields.add("audio");
    openapiFields.add("audio_conference_info");
    openapiFields.add("authentication_domains");
    openapiFields.add("authentication_name");
    openapiFields.add("authentication_option");
    openapiFields.add("auto_recording");
    openapiFields.add("close_registration");
    openapiFields.add("contact_email");
    openapiFields.add("contact_name");
    openapiFields.add("email_language");
    openapiFields.add("enforce_login");
    openapiFields.add("enforce_login_domains");
    openapiFields.add("follow_up_absentees_email_notification");
    openapiFields.add("follow_up_attendees_email_notification");
    openapiFields.add("global_dial_in_countries");
    openapiFields.add("hd_video");
    openapiFields.add("hd_video_for_attendees");
    openapiFields.add("host_video");
    openapiFields.add("language_interpretation");
    openapiFields.add("sign_language_interpretation");
    openapiFields.add("panelist_authentication");
    openapiFields.add("meeting_authentication");
    openapiFields.add("add_watermark");
    openapiFields.add("add_audio_watermark");
    openapiFields.add("notify_registrants");
    openapiFields.add("on_demand");
    openapiFields.add("panelists_invitation_email_notification");
    openapiFields.add("panelists_video");
    openapiFields.add("post_webinar_survey");
    openapiFields.add("practice_session");
    openapiFields.add("question_and_answer");
    openapiFields.add("registrants_confirmation_email");
    openapiFields.add("registrants_email_notification");
    openapiFields.add("registrants_restrict_number");
    openapiFields.add("registration_type");
    openapiFields.add("send_1080p_video_to_attendees");
    openapiFields.add("show_share_button");
    openapiFields.add("survey_url");
    openapiFields.add("enable_session_branding");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WebinarsUpdateScheduledWebinarRequestSettings
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WebinarsUpdateScheduledWebinarRequestSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebinarsUpdateScheduledWebinarRequestSettings is not found in the empty JSON string", WebinarsUpdateScheduledWebinarRequestSettings.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("alternative_hosts") != null && !jsonObj.get("alternative_hosts").isJsonNull()) && !jsonObj.get("alternative_hosts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternative_hosts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternative_hosts").toString()));
      }
      // validate the optional field `attendees_and_panelists_reminder_email_notification`
      if (jsonObj.get("attendees_and_panelists_reminder_email_notification") != null && !jsonObj.get("attendees_and_panelists_reminder_email_notification").isJsonNull()) {
        WebinarsUpdateScheduledWebinarRequestSettingsAttendeesAndPanelistsReminderEmailNotification.validateJsonObject(jsonObj.getAsJsonObject("attendees_and_panelists_reminder_email_notification"));
      }
      if ((jsonObj.get("audio") != null && !jsonObj.get("audio").isJsonNull()) && !jsonObj.get("audio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audio").toString()));
      }
      if ((jsonObj.get("audio_conference_info") != null && !jsonObj.get("audio_conference_info").isJsonNull()) && !jsonObj.get("audio_conference_info").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audio_conference_info` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audio_conference_info").toString()));
      }
      if ((jsonObj.get("authentication_domains") != null && !jsonObj.get("authentication_domains").isJsonNull()) && !jsonObj.get("authentication_domains").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authentication_domains` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authentication_domains").toString()));
      }
      if ((jsonObj.get("authentication_name") != null && !jsonObj.get("authentication_name").isJsonNull()) && !jsonObj.get("authentication_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authentication_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authentication_name").toString()));
      }
      if ((jsonObj.get("authentication_option") != null && !jsonObj.get("authentication_option").isJsonNull()) && !jsonObj.get("authentication_option").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authentication_option` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authentication_option").toString()));
      }
      if ((jsonObj.get("auto_recording") != null && !jsonObj.get("auto_recording").isJsonNull()) && !jsonObj.get("auto_recording").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auto_recording` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auto_recording").toString()));
      }
      if ((jsonObj.get("contact_email") != null && !jsonObj.get("contact_email").isJsonNull()) && !jsonObj.get("contact_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contact_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contact_email").toString()));
      }
      if ((jsonObj.get("contact_name") != null && !jsonObj.get("contact_name").isJsonNull()) && !jsonObj.get("contact_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contact_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contact_name").toString()));
      }
      if ((jsonObj.get("email_language") != null && !jsonObj.get("email_language").isJsonNull()) && !jsonObj.get("email_language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_language").toString()));
      }
      if ((jsonObj.get("enforce_login_domains") != null && !jsonObj.get("enforce_login_domains").isJsonNull()) && !jsonObj.get("enforce_login_domains").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enforce_login_domains` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enforce_login_domains").toString()));
      }
      // validate the optional field `follow_up_absentees_email_notification`
      if (jsonObj.get("follow_up_absentees_email_notification") != null && !jsonObj.get("follow_up_absentees_email_notification").isJsonNull()) {
        WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAbsenteesEmailNotification.validateJsonObject(jsonObj.getAsJsonObject("follow_up_absentees_email_notification"));
      }
      // validate the optional field `follow_up_attendees_email_notification`
      if (jsonObj.get("follow_up_attendees_email_notification") != null && !jsonObj.get("follow_up_attendees_email_notification").isJsonNull()) {
        WebinarsUpdateScheduledWebinarRequestSettingsFollowUpAttendeesEmailNotification.validateJsonObject(jsonObj.getAsJsonObject("follow_up_attendees_email_notification"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("global_dial_in_countries") != null && !jsonObj.get("global_dial_in_countries").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `global_dial_in_countries` to be an array in the JSON string but got `%s`", jsonObj.get("global_dial_in_countries").toString()));
      }
      // validate the optional field `language_interpretation`
      if (jsonObj.get("language_interpretation") != null && !jsonObj.get("language_interpretation").isJsonNull()) {
        WebinarsUpdateScheduledWebinarRequestSettingsLanguageInterpretation.validateJsonObject(jsonObj.getAsJsonObject("language_interpretation"));
      }
      // validate the optional field `sign_language_interpretation`
      if (jsonObj.get("sign_language_interpretation") != null && !jsonObj.get("sign_language_interpretation").isJsonNull()) {
        WebinarsUpdateScheduledWebinarRequestSettingsSignLanguageInterpretation.validateJsonObject(jsonObj.getAsJsonObject("sign_language_interpretation"));
      }
      // validate the optional field `question_and_answer`
      if (jsonObj.get("question_and_answer") != null && !jsonObj.get("question_and_answer").isJsonNull()) {
        WebinarsUpdateScheduledWebinarRequestSettingsQuestionAndAnswer.validateJsonObject(jsonObj.getAsJsonObject("question_and_answer"));
      }
      if ((jsonObj.get("survey_url") != null && !jsonObj.get("survey_url").isJsonNull()) && !jsonObj.get("survey_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `survey_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("survey_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebinarsUpdateScheduledWebinarRequestSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebinarsUpdateScheduledWebinarRequestSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebinarsUpdateScheduledWebinarRequestSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebinarsUpdateScheduledWebinarRequestSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<WebinarsUpdateScheduledWebinarRequestSettings>() {
           @Override
           public void write(JsonWriter out, WebinarsUpdateScheduledWebinarRequestSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public WebinarsUpdateScheduledWebinarRequestSettings read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             WebinarsUpdateScheduledWebinarRequestSettings instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WebinarsUpdateScheduledWebinarRequestSettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WebinarsUpdateScheduledWebinarRequestSettings
  * @throws IOException if the JSON string is invalid with respect to WebinarsUpdateScheduledWebinarRequestSettings
  */
  public static WebinarsUpdateScheduledWebinarRequestSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebinarsUpdateScheduledWebinarRequestSettings.class);
  }

 /**
  * Convert an instance of WebinarsUpdateScheduledWebinarRequestSettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

