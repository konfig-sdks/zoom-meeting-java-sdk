/*
 * Zoom Meeting API
 * The Zoom Meeting APIs let developers to access information from Zoom. 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Panelist base object.
 */
@ApiModel(description = "Panelist base object.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class WebinarsListPanelistsResponsePanelistsInner {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_JOIN_URL = "join_url";
  @SerializedName(SERIALIZED_NAME_JOIN_URL)
  private String joinUrl;

  public static final String SERIALIZED_NAME_VIRTUAL_BACKGROUND_ID = "virtual_background_id";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_BACKGROUND_ID)
  private String virtualBackgroundId;

  public static final String SERIALIZED_NAME_NAME_TAG_ID = "name_tag_id";
  @SerializedName(SERIALIZED_NAME_NAME_TAG_ID)
  private String nameTagId;

  public static final String SERIALIZED_NAME_NAME_TAG_NAME = "name_tag_name";
  @SerializedName(SERIALIZED_NAME_NAME_TAG_NAME)
  private String nameTagName;

  public static final String SERIALIZED_NAME_NAME_TAG_PRONOUNS = "name_tag_pronouns";
  @SerializedName(SERIALIZED_NAME_NAME_TAG_PRONOUNS)
  private String nameTagPronouns;

  public static final String SERIALIZED_NAME_NAME_TAG_DESCRIPTION = "name_tag_description";
  @SerializedName(SERIALIZED_NAME_NAME_TAG_DESCRIPTION)
  private String nameTagDescription;

  public WebinarsListPanelistsResponsePanelistsInner() {
  }

  public WebinarsListPanelistsResponsePanelistsInner id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Panelist&#39;s ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Tg2b6GhcQKKbV7nSCbDKug", value = "Panelist's ID.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public WebinarsListPanelistsResponsePanelistsInner email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Panelist&#39;s email. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jchill@example.com", value = "Panelist's email. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details.")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public WebinarsListPanelistsResponsePanelistsInner name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The panelist&#39;s full name.  **Note** This value cannot exceed more than 12 Chinese characters.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Jill Chill", value = "The panelist's full name.  **Note** This value cannot exceed more than 12 Chinese characters.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public WebinarsListPanelistsResponsePanelistsInner joinUrl(String joinUrl) {
    
    
    
    
    this.joinUrl = joinUrl;
    return this;
  }

   /**
   * Join URL.
   * @return joinUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://example.com/j/11111", value = "Join URL.")

  public String getJoinUrl() {
    return joinUrl;
  }


  public void setJoinUrl(String joinUrl) {
    
    
    
    this.joinUrl = joinUrl;
  }


  public WebinarsListPanelistsResponsePanelistsInner virtualBackgroundId(String virtualBackgroundId) {
    
    
    
    
    this.virtualBackgroundId = virtualBackgroundId;
    return this;
  }

   /**
   * The virtual background&#39;s ID.
   * @return virtualBackgroundId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "xHhPyb8ERMCmiC5njPjFdQ", value = "The virtual background's ID.")

  public String getVirtualBackgroundId() {
    return virtualBackgroundId;
  }


  public void setVirtualBackgroundId(String virtualBackgroundId) {
    
    
    
    this.virtualBackgroundId = virtualBackgroundId;
  }


  public WebinarsListPanelistsResponsePanelistsInner nameTagId(String nameTagId) {
    
    
    
    
    this.nameTagId = nameTagId;
    return this;
  }

   /**
   * The name tag ID to bind.
   * @return nameTagId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "xHhPyb8ERMCmiC5njPjFdQ", value = "The name tag ID to bind.")

  public String getNameTagId() {
    return nameTagId;
  }


  public void setNameTagId(String nameTagId) {
    
    
    
    this.nameTagId = nameTagId;
  }


  public WebinarsListPanelistsResponsePanelistsInner nameTagName(String nameTagName) {
    
    
    
    
    this.nameTagName = nameTagName;
    return this;
  }

   /**
   * The panelist&#39;s name to display in the name tag.
   * @return nameTagName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "name", value = "The panelist's name to display in the name tag.")

  public String getNameTagName() {
    return nameTagName;
  }


  public void setNameTagName(String nameTagName) {
    
    
    
    this.nameTagName = nameTagName;
  }


  public WebinarsListPanelistsResponsePanelistsInner nameTagPronouns(String nameTagPronouns) {
    
    
    
    
    this.nameTagPronouns = nameTagPronouns;
    return this;
  }

   /**
   * The pronouns to display in the name tag.
   * @return nameTagPronouns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "pronouns", value = "The pronouns to display in the name tag.")

  public String getNameTagPronouns() {
    return nameTagPronouns;
  }


  public void setNameTagPronouns(String nameTagPronouns) {
    
    
    
    this.nameTagPronouns = nameTagPronouns;
  }


  public WebinarsListPanelistsResponsePanelistsInner nameTagDescription(String nameTagDescription) {
    
    
    
    
    this.nameTagDescription = nameTagDescription;
    return this;
  }

   /**
   * The description for the name tag, such as the person&#39;s title).
   * @return nameTagDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "description", value = "The description for the name tag, such as the person's title).")

  public String getNameTagDescription() {
    return nameTagDescription;
  }


  public void setNameTagDescription(String nameTagDescription) {
    
    
    
    this.nameTagDescription = nameTagDescription;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the WebinarsListPanelistsResponsePanelistsInner instance itself
   */
  public WebinarsListPanelistsResponsePanelistsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebinarsListPanelistsResponsePanelistsInner webinarsListPanelistsResponsePanelistsInner = (WebinarsListPanelistsResponsePanelistsInner) o;
    return Objects.equals(this.id, webinarsListPanelistsResponsePanelistsInner.id) &&
        Objects.equals(this.email, webinarsListPanelistsResponsePanelistsInner.email) &&
        Objects.equals(this.name, webinarsListPanelistsResponsePanelistsInner.name) &&
        Objects.equals(this.joinUrl, webinarsListPanelistsResponsePanelistsInner.joinUrl) &&
        Objects.equals(this.virtualBackgroundId, webinarsListPanelistsResponsePanelistsInner.virtualBackgroundId) &&
        Objects.equals(this.nameTagId, webinarsListPanelistsResponsePanelistsInner.nameTagId) &&
        Objects.equals(this.nameTagName, webinarsListPanelistsResponsePanelistsInner.nameTagName) &&
        Objects.equals(this.nameTagPronouns, webinarsListPanelistsResponsePanelistsInner.nameTagPronouns) &&
        Objects.equals(this.nameTagDescription, webinarsListPanelistsResponsePanelistsInner.nameTagDescription)&&
        Objects.equals(this.additionalProperties, webinarsListPanelistsResponsePanelistsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, email, name, joinUrl, virtualBackgroundId, nameTagId, nameTagName, nameTagPronouns, nameTagDescription, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebinarsListPanelistsResponsePanelistsInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    joinUrl: ").append(toIndentedString(joinUrl)).append("\n");
    sb.append("    virtualBackgroundId: ").append(toIndentedString(virtualBackgroundId)).append("\n");
    sb.append("    nameTagId: ").append(toIndentedString(nameTagId)).append("\n");
    sb.append("    nameTagName: ").append(toIndentedString(nameTagName)).append("\n");
    sb.append("    nameTagPronouns: ").append(toIndentedString(nameTagPronouns)).append("\n");
    sb.append("    nameTagDescription: ").append(toIndentedString(nameTagDescription)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("email");
    openapiFields.add("name");
    openapiFields.add("join_url");
    openapiFields.add("virtual_background_id");
    openapiFields.add("name_tag_id");
    openapiFields.add("name_tag_name");
    openapiFields.add("name_tag_pronouns");
    openapiFields.add("name_tag_description");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WebinarsListPanelistsResponsePanelistsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WebinarsListPanelistsResponsePanelistsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebinarsListPanelistsResponsePanelistsInner is not found in the empty JSON string", WebinarsListPanelistsResponsePanelistsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("join_url") != null && !jsonObj.get("join_url").isJsonNull()) && !jsonObj.get("join_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `join_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("join_url").toString()));
      }
      if ((jsonObj.get("virtual_background_id") != null && !jsonObj.get("virtual_background_id").isJsonNull()) && !jsonObj.get("virtual_background_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `virtual_background_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("virtual_background_id").toString()));
      }
      if ((jsonObj.get("name_tag_id") != null && !jsonObj.get("name_tag_id").isJsonNull()) && !jsonObj.get("name_tag_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name_tag_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name_tag_id").toString()));
      }
      if ((jsonObj.get("name_tag_name") != null && !jsonObj.get("name_tag_name").isJsonNull()) && !jsonObj.get("name_tag_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name_tag_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name_tag_name").toString()));
      }
      if ((jsonObj.get("name_tag_pronouns") != null && !jsonObj.get("name_tag_pronouns").isJsonNull()) && !jsonObj.get("name_tag_pronouns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name_tag_pronouns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name_tag_pronouns").toString()));
      }
      if ((jsonObj.get("name_tag_description") != null && !jsonObj.get("name_tag_description").isJsonNull()) && !jsonObj.get("name_tag_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name_tag_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name_tag_description").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebinarsListPanelistsResponsePanelistsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebinarsListPanelistsResponsePanelistsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebinarsListPanelistsResponsePanelistsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebinarsListPanelistsResponsePanelistsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<WebinarsListPanelistsResponsePanelistsInner>() {
           @Override
           public void write(JsonWriter out, WebinarsListPanelistsResponsePanelistsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public WebinarsListPanelistsResponsePanelistsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             WebinarsListPanelistsResponsePanelistsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WebinarsListPanelistsResponsePanelistsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WebinarsListPanelistsResponsePanelistsInner
  * @throws IOException if the JSON string is invalid with respect to WebinarsListPanelistsResponsePanelistsInner
  */
  public static WebinarsListPanelistsResponsePanelistsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebinarsListPanelistsResponsePanelistsInner.class);
  }

 /**
  * Convert an instance of WebinarsListPanelistsResponsePanelistsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

