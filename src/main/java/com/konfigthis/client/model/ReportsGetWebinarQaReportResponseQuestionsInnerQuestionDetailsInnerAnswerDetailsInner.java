/*
 * Zoom Meeting API
 * The Zoom Meeting APIs let developers to access information from Zoom. 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner {
  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public static final String SERIALIZED_NAME_CREATE_TIME = "create_time";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  /**
   * Type of answer.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
 public enum TypeEnum {
    DEFAULT("default"),
    
    HOST_ANSWERED("host_answered"),
    
    PARTICIPANT_COMMENTED("participant_commented");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type = TypeEnum.DEFAULT;

  public ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner() {
  }

  public ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner userId(String userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * The user ID of the user who answered the question. This value returns blank for external users.
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Cn_5wJ9mRNGyYOmpjVufBQ", value = "The user ID of the user who answered the question. This value returns blank for external users.")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    
    
    
    this.userId = userId;
  }


  public ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * User display name, including the host or participant. 
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Paul", value = "User display name, including the host or participant. ")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Participant&#39;s email. If the participant is **not** part of the host&#39;s account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "paul@example.com", value = "Participant's email. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details.")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner content(String content) {
    
    
    
    
    this.content = content;
    return this;
  }

   /**
   * The answer from the host or the comment from a participant.
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "fine", value = "The answer from the host or the comment from a participant.")

  public String getContent() {
    return content;
  }


  public void setContent(String content) {
    
    
    
    this.content = content;
  }


  public ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner createTime(String createTime) {
    
    
    
    
    this.createTime = createTime;
    return this;
  }

   /**
   * Content submission time.
   * @return createTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-03-15T07:50:00Z", value = "Content submission time.")

  public String getCreateTime() {
    return createTime;
  }


  public void setCreateTime(String createTime) {
    
    
    
    this.createTime = createTime;
  }


  public ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner type(TypeEnum type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * Type of answer.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "DEFAULT", value = "Type of answer.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    
    
    
    this.type = type;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner instance itself
   */
  public ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner reportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner = (ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner) o;
    return Objects.equals(this.userId, reportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.userId) &&
        Objects.equals(this.name, reportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.name) &&
        Objects.equals(this.email, reportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.email) &&
        Objects.equals(this.content, reportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.content) &&
        Objects.equals(this.createTime, reportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.createTime) &&
        Objects.equals(this.type, reportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.type)&&
        Objects.equals(this.additionalProperties, reportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, name, email, content, createTime, type, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("user_id");
    openapiFields.add("name");
    openapiFields.add("email");
    openapiFields.add("content");
    openapiFields.add("create_time");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner is not found in the empty JSON string", ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("user_id") != null && !jsonObj.get("user_id").isJsonNull()) && !jsonObj.get("user_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) && !jsonObj.get("content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content").toString()));
      }
      if ((jsonObj.get("create_time") != null && !jsonObj.get("create_time").isJsonNull()) && !jsonObj.get("create_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `create_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("create_time").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner>() {
           @Override
           public void write(JsonWriter out, ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner
  * @throws IOException if the JSON string is invalid with respect to ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner
  */
  public static ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner.class);
  }

 /**
  * Convert an instance of ReportsGetWebinarQaReportResponseQuestionsInnerQuestionDetailsInnerAnswerDetailsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

